{"version":3,"sources":["../../xenpaper-ui/src/AppWrapper.tsx","../../xenpaper-ui/src/component/IconToggle.tsx","../../xenpaper-ui/src/component/Text.tsx","../../xenpaper-ui/src/component/Codearea.tsx","../../xenpaper-ui/src/component/ErrorMessage.tsx","../../xenpaper-ui/src/component/LoaderPane.tsx","../../xenpaper-ui/src/component/Char.tsx","../../xenpaper-ui/src/hooks/useAnimationFrame.ts","../../xenpaper-ui/src/layout/Layout.ts","../../xenpaper-ui/src/assets/xenpaper-logo-512x512.png","../../xenpaper-ui/src/Sidebars.tsx","../../mosc/src/mosc.ts","../../xenpaper-ui/src/PitchRuler.tsx","../../xenpaper-ui/src/data/grammar.ts","../../xenpaper-ui/src/data/grammar-to-chars.ts","../../xenpaper-ui/src/data/process-grammar.ts","../../xenpaper-ui/src/hooks/useHash.ts","../../xenpaper-ui/src/hooks/useWindowLoaded.ts","../../sound-engine-tonejs/src/sound-engine-tonejs.ts","../../xenpaper-ui/src/Xenpaper.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalStyle","createGlobalStyle","theme","colors","background","normal","light","text","placeholder","focus","highlights","delimiter","pitch","chord","setterGroup","setter","scaleGroup","scale","comment","commentStart","unknown","error","errorMessage","fonts","mono","copy","widths","sm","AppWrapper","props","children","rel","href","clipIn","keyframes","clipOut","colorIn","colorOut","Boundary","styled","button","hoverBackground","large","Icon","div","show","IconToggle","React","memo","state","paths","onClick","loaded","Object","keys","map","pathState","viewBox","d","index","Text","span","textStyle","typography","space","colorSystem","Codearea","value","onChange","charElements","freeze","content","color","style","fontStyle","Outer","fontSize","disabled","Inner","Textarea","autoCapitalize","autoComplete","autoCorrect","spellCheck","Highlight","textarea","pre","fadeIn","ErrorMessage","LoaderPane","height","css","Char","ch","charData","soundEngine","useState","active","setActive","cb","deps","frame","useRef","last","performance","now","init","animate","time","current","delta","requestAnimationFrame","useEffect","cancelAnimationFrame","useAnimationFrame","playing","position","playTime","start","end","undefined","CharSpan","className","styledProps","compose","layout","flexbox","grid","border","Box","Flex","Flink","a","SidebarInfo","onSetTune","setSidebar","pad","H","B","pt","Ex","tune","C","target","SidebarShare","url","urlEmbed","iframeCode","copiedLink","setCopiedLink","copiedIframe","setCopiedIframe","ShareInput","flexShrink","ml","onCopy","TryButton","EmbedIframe","src","frameBorder","iframe","input","attrs","readOnly","Sidebar","title","desc","wide","TextPanel","width","flexDirection","minHeight","top","right","pr","cross","none","LogoArea","Hsize","as","lineHeight","alignItems","mr","alt","logo","Logo","p","flexGrow","h2","Eg","E","centsToRatio","cents","octaveDivisionToRatio","steps","stepsInOctave","octaveSize","octave","Math","pow","ratioToOctaveDivision","ratio","log","sortByTime","items","slice","sort","b","tempoTimeToMs","bpm1","bpm2","duration","u","v","timeToMs","tempoChanges","push","bpm","bpmEnd","ms","tempoItems","filter","item","type","forEach","tempo","all","lastChange","length","nextTempo","lerp","tempoChange","i","findTempoRangeForTime","SoundEngine","scoreMs","events","Set","note","loop","params","this","callback","add","delete","useStrictMode","ReactKonva","Stage","Layer","Group","Rect","Line","hzToPan","hz","log2","panToHz","pan","panToCents","pxToPan","px","viewPan","viewZoom","hzInRange","lowHz","highHz","getGradientColorFromNote","matched","label","match","hsl","hue","floor","Number","PitchRuler","rulerState","onClear","useCallback","set","draft","notes","clear","flexWrap","pb","render","form","Label","useCheckbox","Button","useInput","plots","useValue","plot","e","min","max","step","PitchRulerCanvas","useDimensions","dimensionsRef","rootHz","notesActive","colourMode","colourModeThreshold","colourModeSoft","visibleRange","noteSetWidth","getY","panToPx","getColor","compare","Array","from","values","startsWith","replace","proxNotes","threshold","hard","noteCents","distance","abs","round","getColorFromNoteProximity","dragStartState","dragging","setDragging","handleMouseDown","evt","preventDefault","startPan","startZoom","startDrag","clientY","handleMouseMove","dragState","nowDrag","onMouseUp","window","addEventListener","removeEventListener","handleWheel","deltaY","handleTouchStart","handleTouchMove","backgroundColor","cursor","ref","onMouseDown","onMouseMove","onWheel","onTouchStart","onTouchMove","collect","x","NoteSet","visibleNotes","y","stroke","strokeWidth","points","fill","align","ROOT_GRID_POSITIONS","RootGrid","lines","dash","CENT_GRID_POSITIONS","CentsGrid","node","fn","Node","meta","pos","sumLen","nodes","reduce","len","Semicolon","Colon","BarLine","Whitespace","OctaveModifier","chars","split","PitchCents","PitchOctaveDivision","numerator","denominator","slash","octaveDenom","PitchOctaveDivision2","PitchRatio","PitchDegree","degree","PitchHz","Pitch","All","Optional","Any","args","PitchGroup","Star","elements","Hold","Tail","Rest","Note","tail","RatioChordPitch","RatioChordPitchGroup","Chord","pitches","RatioChord","EdoScale","divisions","ScaleOctaveMarker","PitchGroupScalePrefix","prefix","PitchGroupScale","isArray","pitchGroupScalePrefix","scaleOctaveMarker","RatioChordScale","Scale","SetScale","SetRoot","SetBpmValue","SetBpm","SetBmsValue","bms","SetBms","SetSubdivisionValue","subdivision","SetSubdivision","SetOscValue","osc","SetOsc","SetEnvValue","s","r","SetEnv","SetRulerRange","low","high","SetRulerPlot","SetRuler","Setter","SetterGroup","setters","Comment","Sequence","ParamEmbed","Param","ParamGroup","XenpaperGrammar","parts","paramGroup","find","part","sequence","parser","Parser","colorMap","Map","extract","data","parent","withinTime","get","key","grammarToChars","limit","name","Error","pitchToRatio","context","octaveMulti","pitchDegreeToRatio","edoToRatios","edoSize","ratios","pitchDegreeWrap","wrappedDegree","pitchToHz","tailToTime","timeEnd","ratioToCentsLabel","ratioToCents","ratioWrap","toFixed","pitchToLabel","centsLabel","scaleLabels","edoToLabels","labels","ENV_VALUES","times","chordToMosc","timeProps","arr","pitchTypes","firstRatioPitch","firstDenominator","ratioPitchTypes","addRatioPitchType","colons","lastNumerator","concat","rulerStateCaptureRootHz","initial","processGrammar","grammar","grammarSequence","INITIAL_ENV","moscItems","initialRulerState","noteToMosc","rest","setterToMosc","newPlot","msEnd","setterToRulerState","setScale","filteredPitches","degreePitches","pop","addRatio","thisTimeToMs","score","lengthTime","hashify","newHash","encodeURIComponent","reverseString","str","reverse","join","useHash","initialHash","hash","decodeURIComponent","unhashify","location","substr","localStorage","getItem","setHash","onHashChange","_setHash","newHashEncoded","history","replaceState","setItem","windowLoadPromise","Promise","resolve","handleLoad","flatMap","mapper","out","OSC_PARTIAL_SUFFIXES","OSC_TYPES_EXPANDED","base","OSC_TYPES","suffix","SoundEngineTonejs","_started","_endMs","_loopEndMs","_activeNoteEvents","synth","Tone","oscillator","volume","envelope","attack","sustain","decay","release","chain","seconds","onEnd","releaseAll","noteMs","_triggerEvent","on","stop","startMs","endMs","setLoopActive","setLoopStart","setLoopEnd","loopStart","loopEnd","cancel","schedule","triggerAttackRelease","paramMs","includes","setAutoFreeze","enableMapSet","parse","unparsed","parsed","console","message","XenpaperGrammarParser","param","lengthMs","scoreToMs","setScore","errorAt","lineNumber","colNumber","lineCount","colCount","getMsAtLine","line","counted","tuneSplit","chr","PLAY_PATHS","paused","Xenpaper","setLoaded","document","ready","useWindowLoaded","XenpaperApp","tuneForm","useDendriform","embed","useDerive","newValue","hashified","branch","useChange","parsedForm","selectedLine","looping","lowPan","highPan","useRulerState","onNote","id","handleSetPlayback","play","gotoMs","pause","handleTogglePlayback","handleToggleLoop","event","ctrlKey","metaKey","keyCode","shiftKey","redo","undo","sidebarState","toggleSidebarInfo","toggleSidebarShare","toggleSidebarRuler","codepaneContainerProps","playPause","undoRedo","useHistory","canUndo","canRedo","SideButton","sidebarToggles","sidebar","code","CodePanel","htmlTitle","SetHtmlTitle","openOnXenpaper","EditOnXenpaperButton","EmbedLayout","NormalLayout","display","Toolbar","mt","mb","Hr","my","pl","overflow","inputProps","tuneChars","charDataArray","hasPlayStartButtons","some","playStartLine","createPlayStart","PlayStart","stopPropagation","Helmet","property","multiline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.15f0b403.chunk.js","sourcesContent":["import React from 'react';\n\nimport {ThemeProvider, createGlobalStyle} from 'styled-components';\nimport type {HighlightColor} from './data/grammar-to-chars';\n\nconst GlobalStyle = createGlobalStyle`\n    html, body, div, span, applet, object, iframe,\n    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n    a, abbr, acronym, address, big, cite, code,\n    del, dfn, em, img, ins, kbd, q, s, samp,\n    small, strike, strong, sub, sup, tt, var,\n    b, u, i, center,\n    dl, dt, dd, ol, ul, li,\n    fieldset, form, label, legend,\n    table, caption, tbody, tfoot, thead, tr, th, td,\n    article, aside, canvas, details, embed,\n    figure, figcaption, footer, header, hgroup,\n    menu, nav, output, ruby, section, summary,\n    time, mark, audio, video {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        font-size: 100%;\n        font: inherit;\n        vertical-align: baseline;\n    }\n    article, aside, details, figcaption, figure,\n    footer, header, hgroup, menu, nav, section {\n        display: block;\n    }\n    body {\n        line-height: 1;\n    }\n    ol, ul {\n        list-style: none;\n    }\n    blockquote, q {\n        quotes: none;\n    }\n    blockquote:before, blockquote:after,\n    q:before, q:after {\n        content: '';\n        content: none;\n    }\n    table {\n        border-collapse: collapse;\n        border-spacing: 0;\n    }\n    * {\n        box-sizing: border-box;\n    }\n\n    html {\n        font-family: 'DM Mono', sans-serif;\n        height: 100%;\n        line-height: 1.5em;\n        position: relative;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        background-color: #0e151b;\n        color: #ffffff;\n        font-size: 16px;\n    }\n\n    body {\n        font-weight: 400;\n        height: 100%;\n        line-height: 1.5em;\n        overflow-x: hidden;\n        text-rendering: optimizelegibility;\n\n        &[aria-hidden='true'] {\n            overflow: hidden;\n        }\n    }\n\n    #root {\n        height: 100%;\n    }\n`;\n\nexport type Colors = {\n    background: {\n        normal: string;\n        light: string;\n    };\n    text: {\n        placeholder: string;\n    };\n    focus: string;\n    highlights: {\n        [k in HighlightColor]: string;\n    }\n};\n\nconst colors: Colors = {\n    background: {\n        normal: '#0e151b',\n        light: '#18232d'\n    },\n    text: {\n        placeholder: '#198c8c'\n    },\n    focus: '#115d5d',\n    highlights: {\n        delimiter: '#198c8c',\n        pitch: '#22cece',\n        chord: '#22cece',\n        setterGroup: '#821361',\n        setter: '#d61ba4',\n        scaleGroup: '#94472f',\n        scale: '#ff541e',\n        comment: '#ffffff',\n        commentStart: '#198c8c',\n        unknown: '#a490b3',\n        error: '#cc0000',\n        errorMessage: '#cc0000'\n    }\n};\n\nconst fonts = {\n    mono: `'DM Mono', sans-serif`,\n    copy: `'Nunito', sans-serif`\n};\n\nconst widths = {\n    sm: '640px'\n};\n\nconst theme = {\n    colors,\n    fonts,\n    widths\n};\n\ntype Props = {\n    children: React.ReactNode\n};\n\nexport function AppWrapper(props: Props): React.ReactElement {\n    const {children} = props;\n    return <>\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n        <link href=\"https://fonts.googleapis.com/css2?family=DM+Mono:ital,wght@0,400;0,500;1,400&display=swap\" rel=\"stylesheet\" />\n        <link href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@300;400&display=swap\" rel=\"stylesheet\" />\n        <ThemeProvider theme={theme}>\n            <GlobalStyle />\n            {children}\n        </ThemeProvider>\n    </>;\n}\n","import React from 'react';\nimport styled, {keyframes} from 'styled-components';\n\nconst clipIn = keyframes`\n  0% {\n    clip-path: polygon(0% 0%, 0% 0%, 100% 100%, 100% 100%, 100% 100%, 0% 0%);\n  }\n\n  20% {\n    clip-path: polygon(0% 0%, 0% 0%, 100% 100%, 100% 100%, 100% 100%, 0% 0%);\n  }\n\n  100% {\n    clip-path: polygon(0% 0%, 100% 0%, 100% 0%, 100% 100%, 0% 100%, 0% 100%);\n  }\n`;\n\nconst clipOut = keyframes`\n  0% {\n    clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%, 0% 0%, 100% 100%, 100% 100%, 100% 100%, 0% 0%);\n  }\n\n  100% {\n    clip-path: polygon(100% 0%, 100% 0%, 100% 100%, 0% 100%, 0% 100%, 0% 100%, 100% 100%, 100% 0%, 100% 0%);\n  }\n`;\n\nconst colorIn = keyframes`\n  0% {\n    fill: #115d5d;\n  }\n\n  20% {\n    fill: #115d5d;\n  }\n\n  100% {\n    fill: #fff;\n  }\n`;\n\nconst colorOut = keyframes`\n  0% {\n    fill: #fff;\n  }\n\n  100% {\n    fill: #115d5d;\n  }\n`;\n\ntype ButtonProps = {\n    onClick: () => any;\n    hoverBackground?: boolean;\n    large: boolean;\n};\n\nconst Boundary = styled.button<ButtonProps>`\n    border: none;\n    display: block;\n    height: 3rem;\n    width: 3rem;\n    padding: 1rem .5rem;\n    cursor: pointer;\n    background-color: rgba(0,0,0,0);\n    position: relative;\n    outline: none;\n\n    transition: border-color .2s ease-out;\n    border-left: 3px solid transparent;\n\n    &:focus, &:active {\n        border-left: 3px solid ${props => props.theme.colors.focus};\n    }\n\n    ${props => props.hoverBackground ? `&:hover {\n        background-color: ${props.theme.colors.background.light};\n    }` : ``}\n\n    ${props => props.large && `@media all and (min-width: ${props.theme.widths.sm}) {\n        height: 4rem;\n        width: 5rem;\n        padding: 1rem;\n    }`}\n`;\n\ntype IconProps = {\n    show: boolean;\n    large: boolean;\n};\n\nconst Icon = styled.div<IconProps>`\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 3rem;\n    width: 2rem;\n    padding: 1rem .5rem;\n    animation: ${props => props.show ? clipIn : clipOut} .3s ease-out forwards;\n    margin-left: .5rem;\n\n    path {\n        fill: #fff;\n        animation: ${props => props.show ? colorIn : colorOut} .3s ease-out forwards;\n    }\n\n    opacity: .9;\n    &:hover {\n        opacity: 1;\n    }\n\n    ${props => props.large && `@media all and (min-width: ${props.theme.widths.sm}) {\n        height: 4rem;\n        width: 4rem;\n        padding: 1rem;\n    }`}\n`;\n\ntype Props = {\n    state: string;\n    paths: {[key: string]: string[]};\n    onClick?: (state: string) => any;\n    loaded?: boolean;\n    hoverBackground?: boolean;\n    large?: boolean;\n};\n\n// eslint-disable-next-line react/display-name\nexport const IconToggle: React.FunctionComponent<Props> = React.memo((props: Props): React.ReactElement => {\n    const {state, paths, onClick, loaded = true, hoverBackground = false, large = false} = props;\n\n    return <Boundary onClick={() => onClick && onClick(state)} hoverBackground={hoverBackground} large={large}>\n        {Object.keys(paths).map((pathState: string) => {\n            return <Icon key={pathState} show={loaded && state === pathState} large={large}>\n                <svg viewBox=\"0 0 12 12\">\n                    {paths[pathState].map((d, index) => <path key={index} d={d} />)}\n                </svg>\n            </Icon>;\n        })}\n    </Boundary>;\n});\n\n","import styled from 'styled-components';\nimport {space, textStyle, typography, color as colorSystem} from 'styled-system';\n\nexport const Text = styled.span`\n    ${textStyle}\n    ${typography}\n    ${space}\n    ${colorSystem}\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {Text} from '../component/Text';\nimport {textStyle, typography} from 'styled-system';\n\ntype Props = {\n    value: string;\n    onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n    charElements: React.ReactNode;\n    freeze: boolean;\n};\n\nexport const Codearea = (props: Props): React.ReactElement => {\n    const {value, onChange, charElements, freeze} = props;\n\n    const content = value === ''\n        ? <Text color=\"text.placeholder\" style={{fontStyle: \"italic\"}}>\n            Type your tune here\n            <br /><br />\n        </Text>\n        : <>{charElements}<br /><br /></>;\n\n    return <Outer fontSize={[\"1.1rem\", \"1.4rem\"]} disabled={freeze}>\n        <Inner>\n            <Textarea\n                value={value}\n                onChange={onChange}\n                autoCapitalize=\"off\"\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                disabled={freeze}\n            />\n            <Highlight aria-hidden=\"true\" freeze={freeze}>{content}</Highlight>\n        </Inner>\n    </Outer>;\n};\n\ntype OuterProps = {\n    fontSize: unknown;\n    disabled: boolean;\n};\n\nconst Outer = styled.div<OuterProps>`\n    height: 100%;\n    overflow: auto;\n    ${textStyle}\n    ${typography}\n    line-height: 1.4em;\n    position: relative;\n\n    &:before {\n        content: \"\";\n        display: block;\n        width: 3px;\n        height: 4rem;\n        background-color: transparent;\n        transition: background-color .2s ease-out;\n        position: absolute;\n        top: 12px;\n    }\n\n    &:focus-within {\n        &:before {\n            background-color: ${props => props.theme.colors.focus};\n        }\n    }\n\n    ${props => props.disabled ? `\n        cursor: default;\n        user-select: none;\n        pointer-events: none;\n    ` : ''}\n`;\n\nconst Inner = styled.div`\n    position: relative;\n    text-align: left;\n    box-sizing: border-box;\n    padding: 0px;\n    overflow: hidden;\n    font-variant-ligatures: common-ligatures;\n    min-height: 100%;\n`;\n\nconst Textarea = styled.textarea`\n    margin: 0;\n    border: 0;\n    background: none;\n    box-sizing: inherit;\n    display: inherit;\n    font-family: inherit;\n    font-size: inherit;\n    font-style: inherit;\n    font-variant-ligatures: inherit;\n    font-weight: inherit;\n    letter-spacing: inherit;\n    line-height: inherit;\n    tab-size: inherit;\n    text-indent: inherit;\n    text-rendering: inherit;\n    text-transform: inherit;\n    white-space: pre-wrap;\n    word-break: keep-all;\n    overflow-wrap: break-word;\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    resize: none;\n    color: inherit;\n    overflow: hidden;\n    -webkit-text-fill-color: transparent;\n    -webkit-font-smoothing: antialiased;\n    padding: 1rem 1rem 1rem 2rem;\n    outline: 0;\n\n    &::selection {\n        background: #22cece;\n    }\n\n    &:disabled {\n        user-select: none;\n        opacity: 0;\n    }\n`;\n\ntype HighlightProps = {\n    freeze: boolean;\n};\n\nconst Highlight = styled.pre<HighlightProps>`\n    margin: 0px;\n    border: 0px;\n    background: none;\n    box-sizing: inherit;\n    display: inherit;\n    font-family: inherit;\n    font-size: inherit;\n    font-style: inherit;\n    font-variant-ligatures: inherit;\n    font-weight: inherit;\n    letter-spacing: inherit;\n    line-height: inherit;\n    tab-size: inherit;\n    text-indent: inherit;\n    text-rendering: inherit;\n    text-transform: inherit;\n    white-space: pre-wrap;\n    word-break: keep-all;\n    overflow-wrap: break-word;\n    position: relative;\n    pointer-events: ${props => props.freeze ? 'auto' : 'none'};\n    padding: 1rem 1rem 1rem 2rem;\n    user-select: none;\n`;\n","import styled, {keyframes} from 'styled-components';\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n    top: 1rem;\n  }\n\n  85% {\n    opacity: 0;\n    top: 1rem;\n  }\n\n  100% {\n    opacity: 1;\n    top: 0rem;\n  }\n`;\n\nexport const ErrorMessage = styled.div`\n    position: relative;\n    top: 0;\n    padding-left: 1rem;\n    animation: ${fadeIn} .7s ease-out forwards;\n`;\n","import type React from 'react';\nimport styled, {css, keyframes} from 'styled-components';\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\ninterface Props {\n    readonly loaded: boolean;\n    readonly height: string;\n    readonly children: React.ReactNode;\n}\n\nexport const LoaderPane = styled.div<Props>`\n    height: ${props => props.height};\n    opacity: 0;\n    ${props => props.loaded ? css`animation: ${fadeIn} .1s ease-out forwards;` : ``}\n`;\n","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport type {HighlightColor, CharData} from '../data/grammar-to-chars';\nimport {useAnimationFrame} from '../hooks/useAnimationFrame';\nimport type {SoundEngine} from '@xenpaper/mosc';\n\ntype CharProps = {\n    ch: string;\n    charData?: CharData;\n    soundEngine: SoundEngine;\n};\n\nexport const Char = React.memo(function Char(props: CharProps): React.ReactElement {\n    const {ch, charData, soundEngine} = props;\n\n    const [active, setActive] = useState<boolean>(false);\n\n    useAnimationFrame(() => {\n        const time = soundEngine.playing() ? soundEngine.position() : -1;\n        const [start, end] = charData?.playTime ?? [];\n\n        const active = time !== -1\n            && start !== undefined\n            && end !== undefined\n            && start <= time\n            && end > time;\n\n        setActive(active);\n    }, [ch, charData]);\n\n    return <CharSpan className={active ? 'active' : ''} color={charData?.color}>{ch}</CharSpan>;\n});\n\ntype CharSpanProps = {\n    readonly color?: HighlightColor;\n    readonly children: React.ReactNode;\n};\n\nconst CharSpan = styled.span<CharSpanProps>`\n    color: ${props => props.theme.colors.highlights[props.color || 'unknown']};\n    transition: color 0.2s ${props => props.color === 'error' ? '0.5s' : '0s'} ease-out;\n\n    &.active {\n        transition: color 0s 0s linear;\n        color: #fff;\n    }\n`;\n","import {useEffect, useRef} from \"react\";\n\ntype Callback = (time: number, delta: number) => any;\n\nexport const useAnimationFrame = (cb: Callback, deps: any[]): void => {\n    const frame = useRef<number>(0);\n    const last = useRef<number>(performance.now());\n    const init = useRef<number>(performance.now());\n\n    const animate = () => {\n        const now = performance.now();\n        const time = (now - init.current) / 1000;\n        const delta = (now - last.current) / 1000;\n        cb(time, delta);\n        last.current = now;\n        frame.current = requestAnimationFrame(animate);\n    };\n\n    useEffect(() => {\n        frame.current = requestAnimationFrame(animate);\n        return () => cancelAnimationFrame(frame.current);\n    }, deps);\n};\n","import styled from 'styled-components';\n\nimport {\n    space,\n    color,\n    layout,\n    flexbox,\n    grid,\n    background,\n    border,\n    position,\n    compose\n} from 'styled-system';\n\nconst styledProps = compose(\n    space,\n    color,\n    layout,\n    flexbox,\n    grid,\n    background,\n    border,\n    position\n);\n\nexport const Box = styled.div<any>`\n    ${styledProps}\n`;\n\nexport const Flex = styled.div<any>`\n    display: flex;\n    ${styledProps}\n`;\n","export default __webpack_public_path__ + \"static/media/xenpaper-logo-512x512.19f23cff.png\";","import React, { useState } from \"react\";\nimport { IconToggle } from \"./component/IconToggle\";\nimport { Text } from \"./component/Text\";\nimport { Box, Flex } from \"./layout/Layout\";\nimport styled from \"styled-components\";\nimport { textStyle, typography } from \"styled-system\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport logo from \"./assets/xenpaper-logo-512x512.png\";\n\nimport type { SidebarState } from \"./Xenpaper\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nconst Flink = styled.a`\n    color: ${(props) => props.theme.colors.highlights.unknown};\n    text-decoration: none;\n    font-style: normal;\n\n    &:hover,\n    &:focus {\n        color: #fff;\n        text-decoration: underline;\n    }\n\n    &:active {\n        color: #fff;\n    }\n`;\n\ntype SidebarInfoProps = {\n    onSetTune: (tune: string) => void;\n    setSidebar: (open: SidebarState) => void;\n};\n\nexport const SidebarInfo = (props: SidebarInfoProps): React.ReactElement => {\n    const { onSetTune, setSidebar } = props;\n    return (\n        <Sidebar setSidebar={setSidebar} pad>\n            <H>How it works</H>\n            <B>\n                Create tunes by typing in the text area. Press play to hear what\n                you{\"'\"}ve written.{/*, or press <C>Ctrl / Cmd + Enter</C>.*/}\n            </B>\n            <Box pt={4}>\n                <H>Notes</H>\n            </Box>\n            <B>\n                Typing a number will create a note. Notes can be separated by\n                spaces or commas.\n                <Ex tune=\"0 4 7 12\" color=\"pitch\" onSetTune={onSetTune} />\n            </B>\n            <B>\n                Notes can be held for longer with hyphens <C>---</C>, and rests\n                can be added with dots <C>...</C>.\n                <Ex\n                    tune=\"0.2.3...3-2-0--.\"\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Spaces, new lines and bars <C>|</C> can be placed anywhere\n                between notes. Bars can also be placed during a note.\n                <Ex\n                    tune=\"0 8 7-|0 8 7-|-5 4--\"\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Notes can be written in many ways.\n                <br />- as scale degrees starting from zero <C>0,2,4</C>,\n                <br />- as ratios <C>3/2,5/4,1/1</C>,\n                <br />- as cents <C>702c</C>,\n                <br />- as divisions of an octave <C>11{\"\\\\\"}19</C>,\n                <br />- as divisions of an octave with a specific size (e.g. 3){\" \"}\n                <C>5{\"\\\\\"}13o3</C>\n                <br />- as cycles per second <C>432Hz</C>\n                <Ex\n                    tune={\"0 7 1/1 3/2 0c 702c\\n0\\\\19 11\\\\19 220Hz 330Hz\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Notes can be shifted up or down octaves. <C>{\"'\"}</C> shifts the\n                following note up 1 octave, <C>\"</C> shifts the following note\n                up 2 octaves, and <C>`</C> shifts the following note down an\n                octave.\n                <Ex\n                    tune={\"0-3-'0-'3-\\\"0-'\\\"0-`0-``0-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Chords can be played by using <C>[</C> and <C>]</C> around a\n                comma-separated pitches.\n                <Ex\n                    tune=\"[3,7]-[5,8]-[0,3,7]--.[1/1,6/5,3/2]--.\"\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Chords can also be played using colon-notated ratios{\" \"}\n                <C>4:5:6</C>\n                <Ex tune=\"10:12:15---\" color=\"pitch\" onSetTune={onSetTune} />\n            </B>\n            <Box pt={4}>\n                <H>Comments</H>\n            </Box>\n            <B>\n                Comments can be added using <C>#</C> at the start of a line\n                <Ex\n                    tune={\n                        \"# a 7th chord\\n[0,4,7,10]--..\\n\\n# a harmonic 7th chord\\n4:5:6:7--..\"\n                    }\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <Box pt={4}>\n                <H>Scales</H>\n            </Box>\n            <B>\n                The scale can be changed at any time. A scale is denoted by{\" \"}\n                <C>{\"{\"}</C> and <C>{\"}\"}</C>. These dictate what pitches any\n                subsequent scale degrees correspond to. The default is 12 equal\n                divisons of the octave <C>12edo</C>.\n                <Ex\n                    tune=\"[0,4,7]--- {31edo}[0,10,18]---\"\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Equal division equave size can be changed by replacing the{\" \"}\n                {'\"o\"'} with a number or fraction <C>13ed3</C>.\n                <Ex\n                    tune=\"{13ed3}0 1 2 3 4\"\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Scales can be comprised of individual pitches.\n                <Ex\n                    tune={\"{1/1 9/8 5/4 4/3 3/2 5/3 15/8}\\n0 1 2 3 4 5 6 7-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Scales comprised of individual pitches can also set their equave\n                size using <C>{\"'\"}</C> after the last pitch. Defaults to{\" \"}\n                <C>2/1</C>\n                <Ex\n                    tune={\"{1/1 5/4 4/3 3/2'}\\n0 1 2 3 4 5 6 7 8-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Scales can use colon-notated ratios\n                <Ex\n                    tune={\"{12:14:16:18:21}\\n0 1 2 3 4 5 6 7-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Harmonic series segments can be specified by using the{\" \"}\n                <C>{\"::\"}</C> symbol inside a colon-notated ratio scale.{\" \"}\n                <C>4::7</C> is the same as <C>4:5:6:7</C>.\n                <Ex\n                    tune={\"{4::7}\\n0 1 2 3 4-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Scales can also reference the scale degrees at the moment they\n                are encountered. This can be useful for creating a subset of a\n                scale.\n                <Ex\n                    tune={\"{19edo}{0 3 6 8 11 14 17}\\n0 1 2 3 4 5 6 7-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Modes can be set using <C>{\"{m\"}</C> and <C>{\"}\"}</C>.\n                <Ex\n                    tune={\"{12edo}{m2 1 2 2 1 2 2}\\n0 1 2 3 4 5 6 7-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                All pitch values other than cycles-per-second are relative to a\n                root note. This can be changed with <C>{\"{r...}\"}</C>. It can be\n                given any pitch value to use as the new root. It defaults to{\" \"}\n                <C>{\"{r440Hz}\"}</C>\n                <Ex\n                    tune={\"0 2 4-{r432Hz}0 2 4-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                As each change to the root pitch is relative to the current\n                root, multiple roots can be chained after each other\n                <Ex\n                    tune={\"4 0-{r2}4 0-{r2}4 0-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                This can also be used to switch octaves for a time.\n                <Ex\n                    tune={\"4 0-{r'0}4 0-{r`0}4 0-\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <Box pt={4}>\n                <H>Setters</H>\n            </Box>\n            <B>\n                Setters are a type of statement that are used to set various\n                parameters as a tune progresses, such as <C>(bpm:100)</C> or{\" \"}\n                <C>(osc:sine)</C>. A setter is denoted by <C>(</C> and <C>)</C>,\n                and can be placed anywhere between notes or on new lines.\n                Multiple setters can be combined into a single statement using a\n                semicolon <C>(bpm:100; osc:sine)</C>\n            </B>\n\n            <Box pt={4}>\n                <H>Timing</H>\n            </Box>\n            <B>\n                Tempo can be changed using the tempo setter <C>(bpm:...)</C>.\n                Defaults to <C>(bpm:120)</C>\n                <Ex\n                    tune=\"(bpm:200)7 5 4 2 0...\"\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Tempo can also be set using milliseconds per beat{\" \"}\n                <C>(bms:...)</C>.\n                <Ex\n                    tune=\"(bms:1000)3 2 0\"\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Divisions of the beat can be set using the division setter{\" \"}\n                <C>(div:...)</C>. These can also be shortened to <C>(...)</C>,\n                like <C>(4)</C> or <C>(1/4)</C>. Defaults to 2 divisions per\n                beat (eighth notes) <C>(div:2)</C>\n                <Ex\n                    tune=\"0 2 3 7(3)0 2 3 7(4)0 2 3 7(1/2)0 2 3 7\"\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <Box pt={4}>\n                <H>Sound</H>\n            </Box>\n            <B>\n                The oscillator can be changed using the oscillator setter{\" \"}\n                <C>(osc:...)</C>. Defaults to <C>(osc:triangle)</C>\n                <Ex\n                    tune={\n                        \"(osc:sine)0 4 7.\\n(osc:sawtooth)0 4 7.\\n(osc:square)0 4 7.\"\n                    }\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                Valid values are <C>sine</C>, <C>sawtooth</C>, <C>square</C> and{\" \"}\n                <C>triangle</C>. Any of these can be optionally prefixed with{\" \"}\n                <C>fm</C>, <C>am</C>or <C>fat</C>. Any of these can be suffixed\n                with an integer from <C>1</C> to <C>32</C> to indicate the\n                number of partials to use.\n                <Ex\n                    tune={\n                        \"(osc:fmsine)0 4 7.\\n(osc:fatsquare)0 4 7.\\n(osc:sawtooth5)0 4 7.\"\n                    }\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                The envelope can be changed using the envelope setter{\" \"}\n                <C>(env:...)</C>. This accepts 4 digits corresponding to attack,\n                decay, sustain and release, where <C>0</C> is fast / small, and{\" \"}\n                <C>9</C> is slow / big. Defaults to <C>(env:2856)</C>\n                <Ex\n                    tune={\"(env:0158)0-.....\\n(env:6860)0---...\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n            <B>\n                All oscillator and envelope options are made possible by{\" \"}\n                <Flink target=\"_blank\" href=\"https://tonejs.github.io/\">\n                    tonejs\n                </Flink>\n                .\n            </B>\n            <Box pt={4}>\n                <H>Ruler</H>\n            </Box>\n            <B>\n                The Ruler button displays a pitch ruler. Played notes will\n                appear on it. Click and drag to pan, use the mouse wheel to\n                zoom. Touch devices are not yet supported.\n            </B>\n            <B>\n                The current scale can be plotted by calling <C>(plot)</C>.\n                Calling it multiple times will render multiple scales. To see\n                this demo, you must click Ruler after you click Demo.\n                <Ex\n                    tune={\"(plot){19edo}(plot)\"}\n                    color=\"pitch\"\n                    onSetTune={onSetTune}\n                />\n            </B>\n        </Sidebar>\n    );\n};\n\ntype SidebarShareProps = {\n    setSidebar: (open: SidebarState) => void;\n    url: string;\n    urlEmbed: string;\n};\n\nexport const SidebarShare = (props: SidebarShareProps): React.ReactElement => {\n    const { setSidebar, url, urlEmbed } = props;\n\n    const iframeCode = `<iframe width=\"560\" height=\"315\" src=\"${urlEmbed}\" title=\"Xenpaper\" frameborder=\"0\"></iframe>`;\n\n    const [copiedLink, setCopiedLink] = useState<boolean>(false);\n    const [copiedIframe, setCopiedIframe] = useState<boolean>(false);\n\n    return (\n        <Sidebar setSidebar={setSidebar} pad>\n            <Box>\n                <H>Share link</H>\n                <Flex>\n                    <ShareInput value={url} />\n                    <Box flexShrink=\"0\" ml={3}>\n                        <CopyToClipboard\n                            text={url}\n                            onCopy={() => setCopiedLink(true)}\n                        >\n                            <TryButton>\n                                {copiedLink ? \"Copied\" : \"Copy\"}\n                            </TryButton>\n                        </CopyToClipboard>\n                    </Box>\n                </Flex>\n            </Box>\n            <Box pt={4}>\n                <H>Embed</H>\n                <Flex>\n                    <ShareInput value={iframeCode} />\n                    <Box flexShrink=\"0\" ml={3}>\n                        <CopyToClipboard\n                            text={url}\n                            onCopy={() => setCopiedIframe(true)}\n                        >\n                            <TryButton>\n                                {copiedIframe ? \"Copied\" : \"Copy\"}\n                            </TryButton>\n                        </CopyToClipboard>\n                    </Box>\n                </Flex>\n                <Box pt={3}>\n                    <EmbedIframe\n                        key={urlEmbed}\n                        src={urlEmbed}\n                        frameBorder=\"0\"\n                    />\n                </Box>\n            </Box>\n        </Sidebar>\n    );\n};\n\nconst EmbedIframe = styled.iframe`\n    width: 100%;\n`;\n\nconst ShareInput = styled.input.attrs(() => ({ readOnly: true }))`\n    width: 100%;\n    background-color: ${(props) => props.theme.colors.background.normal};\n    font-family: ${(props) => props.theme.fonts.mono};\n    color: #ffffff;\n    padding: 0.25rem;\n    border: ${(props) =>\n            props.theme.colors.highlights[props.color || \"unknown\"]}\n        1px solid;\n`;\n\ntype SidebarProps = {\n    setSidebar: (open: SidebarState) => void;\n    children: React.ReactNode;\n    title?: string;\n    desc?: string;\n    pad?: boolean;\n    wide?: boolean;\n};\n\nexport const Sidebar = (props: SidebarProps): React.ReactElement => {\n    const { setSidebar, children, title, desc, pad, wide } = props;\n    return (\n        <TextPanel\n            width={[\"auto\", \"20rem\", \"30rem\", wide ? \"55%\" : \"40%\"]}\n            flexDirection=\"column\"\n            flexShrink=\"0\"\n            minHeight=\"0\"\n            height={[\"66vh\", \"auto\"]}\n        >\n            <Box\n                position={[\"absolute\", \"fixed\"]}\n                top={0}\n                right={0}\n                pt={3}\n                pr={3}\n            >\n                <IconToggle\n                    state=\"cross\"\n                    paths={{\n                        cross: [\n                            \"M 1 0 L 12 11 L 11 12 L 0 1 Z\",\n                            \"M 1 12 L 12 1 L 11 0 L 0 11 Z\",\n                        ],\n                        none: [],\n                    }}\n                    onClick={() => setSidebar(\"none\")}\n                    loaded\n                />\n            </Box>\n            <LogoArea>\n                {title && <Hsize>{title}</Hsize>}\n                {desc && (\n                    <Text\n                        as=\"div\"\n                        color=\"text.placeholder\"\n                        style={{ fontStyle: \"italic\", lineHeight: \"1.3rem\" }}\n                    >\n                        {desc}\n                    </Text>\n                )}\n                {!title && (\n                    <Flex alignItems=\"center\">\n                        <Box mr={4} width=\"5rem\" pt={2}>\n                            <img alt=\"Xenpaper logo\" src={logo} width=\"100%\" />\n                        </Box>\n                        <Box>\n                            <Logo>xenpaper</Logo>\n                            <Text\n                                as=\"div\"\n                                color=\"text.placeholder\"\n                                style={{\n                                    fontStyle: \"italic\",\n                                    lineHeight: \"1.3rem\",\n                                }}\n                            >\n                                Text-based microtonal sequencer.\n                            </Text>\n                            <Text\n                                as=\"div\"\n                                color=\"text.placeholder\"\n                                style={{\n                                    fontStyle: \"italic\",\n                                    lineHeight: \"1.3rem\",\n                                }}\n                            >\n                                Write down musical ideas and share the link\n                                around.\n                            </Text>\n                        </Box>\n                    </Flex>\n                )}\n            </LogoArea>\n            <Box p={pad ? 4 : 0} flexGrow=\"1\">\n                {children}\n            </Box>\n        </TextPanel>\n    );\n};\n\nconst TextPanel = styled(Flex)`\n    background-color: ${(props) => props.theme.colors.background.light};\n    font-family: ${(props) => props.theme.fonts.copy};\n    position: relative;\n    animation: 0.3s ease-out onShow;\n    position: relative;\n    overflow: auto;\n\n    opacity: 1;\n    top: 0;\n\n    @keyframes onShow {\n        0% {\n            opacity: 0;\n            top: 0.25rem;\n        }\n        100% {\n            opacity: 1;\n            top: 0;\n        }\n    }\n`;\n\nconst LogoArea = styled(Box)`\n    background-color: ${(props) => props.theme.colors.background.normal};\n    padding: 2rem 2rem 1.5rem;\n`;\n\nconst Logo = styled(Box)`\n    font-size: 2.5rem;\n    line-height: 2rem;\n    margin-bottom: 0.5rem;\n`;\n\nconst B = styled.div`\n    margin-bottom: 2rem;\n`;\n\nconst H = styled.h2`\n    font-size: 1.5rem;\n    margin-bottom: 1rem;\n`;\n\nconst Hsize = styled.h2`\n    font-size: 1.5rem;\n    margin-bottom: 0.25rem;\n`;\n\nconst C = styled.span`\n    font-family: ${(props) => props.theme.fonts.mono};\n    background-color: ${(props) => props.theme.colors.background.normal};\n    padding: 0.1rem;\n`;\n\ntype ExProps = {\n    tune: string;\n    onSetTune: (tune: string) => void;\n    color: string;\n    className?: string;\n};\n\nconst Ex = styled((props: ExProps): React.ReactElement => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return (\n        <Flex className={props.className}>\n            <Eg>e.g. </Eg>\n            <E fontSize={[\"1.1rem\", \"1.4rem\"]} color={props.color}>\n                {props.tune}\n            </E>\n            <Box flexShrink=\"0\">\n                <TryButton onClick={() => props.onSetTune(props.tune)}>\n                    Demo\n                </TryButton>\n            </Box>\n        </Flex>\n    );\n})`\n    font-family: ${(props) => props.theme.fonts.mono};\n    padding: 0.5rem;\n    margin-top: 1rem;\n    background-color: ${(props) => props.theme.colors.background.normal};\n    line-height: 2em;\n`;\n\nconst TryButton = styled.button`\n    border: none;\n    display: block;\n    padding: 0.5rem;\n    cursor: pointer;\n    background-color: ${(props) => props.theme.colors.highlights.scale};\n    color: ${(props) => props.theme.colors.background.normal};\n    position: relative;\n    outline: none;\n    opacity: 0.7;\n\n    transition: opacity 0.2s ease-out;\n\n    &:hover,\n    &:focus,\n    &:active {\n        opacity: 1;\n    }\n`;\n\nconst Eg = styled.div`\n    font-style: italic;\n    color: ${(props) => props.theme.colors.text.placeholder};\n    padding-left: 0.6rem;\n    padding-right: 1rem;\n    flex-shrink: 0;\n`;\n\ntype EProps = {\n    fontSize: unknown;\n};\n\nconst E = styled.pre<EProps>`\n    flex-grow: 1;\n    ${textStyle}\n    ${typography}\n    line-height: 1.4em;\n    font-style: normal;\n    color: ${(props) =>\n        props.theme.colors.highlights[props.color || \"unknown\"]};\n    word-wrap: break-word;\n    white-space: pre-wrap;\n    flex-shrink: 1;\n    width: 0;\n    padding-right: 0.5rem;\n`;\n","//\n// types\n//\n\nexport type MoscNote = {\n    type: 'NOTE_TIME';\n    time: number;\n    timeEnd: number;\n    hz: number;\n    label: string;\n};\n\nexport type MoscNoteMs = {\n    type: 'NOTE_MS';\n    ms: number;\n    msEnd: number;\n    hz: number;\n    label: string;\n};\n\nexport type MoscParam = {\n    type: 'PARAM_TIME';\n    time: number;\n    value: any;\n};\n\nexport type MoscParamMs = {\n    type: 'PARAM_MS';\n    ms: number;\n    value: any;\n};\n\nexport type MoscTempo = {\n    type: 'TEMPO';\n    time: number;\n    bpm: number;\n    lerp: boolean;\n};\n\nexport type MoscEnd = {\n    type: 'END_TIME';\n    time: number;\n};\n\nexport type MoscEndMs = {\n    type: 'END_MS';\n    ms: number;\n};\n\nexport type MoscItem = MoscNote|MoscTempo|MoscParam|MoscEnd;\n\nexport type MoscScore = {\n    sequence: MoscItem[];\n    lengthTime: number;\n};\n\nexport type MoscItemMs = MoscNoteMs|MoscParamMs|MoscEndMs;\n\nexport type MoscScoreMs = {\n    sequence: MoscItemMs[];\n    lengthMs: number;\n};\n\n//\n// utils\n//\n\nexport const centsToRatio = (cents: number, octave: number = 0): number => {\n    return octaveDivisionToRatio(cents, 1200, 2, octave);\n};\n\nexport const octaveDivisionToRatio = (steps: number, stepsInOctave: number, octaveSize: number, octave: number = 0): number => {\n    return Math.pow(octaveSize, (steps + (octave * stepsInOctave)) / stepsInOctave);\n};\n\nexport const ratioToCents = (ratio: number, octave: number = 0): number => {\n    return ratioToOctaveDivision(ratio, 1200, 2, octave);\n};\n\nexport const ratioToOctaveDivision = (ratio: number, stepsInOctave: number, octaveSize: number, octave: number = 0): number => {\n    return (Math.log(ratio) / Math.log(octaveSize) * stepsInOctave) - (octave * stepsInOctave);\n};\n\nexport const sortByTime = <T extends {time: number}>(items: T[]): T[] => {\n    return items.slice().sort((a, b) => {\n        if(a.time < b.time) return -1;\n        if(a.time > b.time) return 1;\n        return 0;\n    });\n};\n\nexport const sortByMs = (items: Array<MoscNoteMs>): Array<MoscNoteMs> => {\n    return items.slice().sort((a, b) => {\n        if(a.ms < b.ms) return -1;\n        if(a.ms > b.ms) return 1;\n        return 0;\n    });\n};\n\n//\n// time-based to ms-based conversion\n//\n\nconst tempoTimeToMs = (bpm1: number, bpm2: number, duration: number): number => {\n    let u = bpm1 / 60;\n    let v = bpm2 / 60;\n    let s = duration;\n    if(u === v) return s / v * 1000;\n    return 2 * s * (v - u) / (v * v - u * u) * 1000;\n};\n\ntype TempoChange = {\n    bpm: number;\n    bpmEnd: number;\n    time: number;\n    ms: number;\n};\n\nconst findTempoRangeForTime = (tempoChanges: TempoChange[], time: number): TempoChange => {\n    for(let i = tempoChanges.length - 1; i >= 0; i--) {\n        if(time >= tempoChanges[i].time) {\n            return tempoChanges[i];\n        }\n    }\n    return tempoChanges[0];\n};\n\nexport const timeToMs = (items: MoscItem[]): ((time: number) => number) => {\n\n    const tempoChanges: TempoChange[] = [];\n    tempoChanges.push({\n        bpm: 60,\n        bpmEnd: 60,\n        time: 0,\n        ms: 0\n    });\n\n    const tempoItems: MoscTempo[] = items.filter((item: MoscItem): item is MoscTempo => item.type === 'TEMPO');\n\n    sortByTime(tempoItems).forEach((tempo: MoscTempo, index: number, all: MoscTempo[]) => {\n        const lastChange = tempoChanges[tempoChanges.length - 1] as TempoChange;\n        const nextTempo: MoscTempo|undefined = all[index + 1];\n\n        const ms = tempoTimeToMs(lastChange.bpm, lastChange.bpmEnd, tempo.time - lastChange.time) + lastChange.ms;\n        const bpmEnd = (nextTempo && nextTempo.lerp) ? nextTempo.bpm : tempo.bpm;\n\n        tempoChanges.push({\n            bpm: tempo.bpm,\n            bpmEnd,\n            time: tempo.time,\n            ms\n        });\n    });\n\n    return (time: number): number => {\n        const tempoChange: TempoChange = findTempoRangeForTime(tempoChanges, time);\n        return tempoTimeToMs(tempoChange.bpm, tempoChange.bpmEnd, time - tempoChange.time) + tempoChange.ms;\n    };\n};\n\nexport const scoreToMs = (score: MoscScore): MoscScoreMs => {\n    const thisTimeToMs = timeToMs(score.sequence);\n\n    const sequence: MoscItemMs[] = sortByTime(score.sequence)\n        .map((item: MoscItem): MoscItemMs|undefined => {\n            if(item.type === 'NOTE_TIME') {\n                const note = item as MoscNote;\n                return {\n                    type: 'NOTE_MS',\n                    hz: note.hz,\n                    label: note.label,\n                    ms: thisTimeToMs(note.time),\n                    msEnd: thisTimeToMs(note.timeEnd)\n                };\n            }\n            if(item.type === 'PARAM_TIME') {\n                const param = item as MoscParam;\n                return {\n                    type: 'PARAM_MS',\n                    value: param.value,\n                    ms: thisTimeToMs(param.time)\n                };\n            }\n            if(item.type === 'END_TIME') {\n                const end = item as MoscEnd;\n                return {\n                    type: 'END_MS',\n                    ms: thisTimeToMs(end.time)\n                };\n            }\n            return undefined;\n        })\n        .filter((item): item is MoscItemMs => !!item);\n\n    return {\n        sequence,\n        lengthMs: thisTimeToMs(score.lengthTime)\n    };\n};\n\n//\n// soud engine base class\n//\n\ntype SoundEngineEndEventCallback = () => void;\ntype SoundEngineNoteEventCallback = (noteMs: MoscNoteMs, on: boolean) => void;\ntype SoundEngineEventCallbackCancel = () => void;\n\nexport class SoundEngine {\n\n    scoreMs?: MoscScoreMs;\n\n    playing(): boolean {\n        return false;\n    }\n\n    looping(): boolean {\n        return false;\n    }\n\n    position(): number {\n        return 0;\n    }\n\n    endPosition(): number {\n        return 0;\n    }\n\n    async play(): Promise<void> {}\n\n    async pause(): Promise<void> {}\n\n    async gotoMs(ms: number): Promise<void> {}\n\n    setLoop(loop: boolean, startMs: number = 0, endMs: number = 0): void {}\n    setLoopActive(loop: boolean): void {}\n    setLoopStart(ms: number = 0): void {}\n    setLoopEnd(ms: number = 0): void {}\n\n    async setScore(scoreMs: MoscScoreMs): Promise<void> {}\n\n    // events\n\n    events = {\n        end: new Set<SoundEngineEndEventCallback>(),\n        note: new Set<SoundEngineNoteEventCallback>()\n    };\n\n    _triggerEvent(type: string, ...params: any) {\n        // @ts-ignore\n        this.events[type].forEach(cb => cb(...params));\n    }\n\n    onEnd(callback: SoundEngineEndEventCallback): SoundEngineEventCallbackCancel {\n        this.events.end.add(callback);\n        return () => {\n            this.events.end.delete(callback);\n        };\n    }\n\n    onNote(callback: SoundEngineNoteEventCallback): SoundEngineEventCallbackCancel {\n        this.events.note.add(callback);\n        return () => {\n            this.events.note.delete(callback);\n        };\n    }\n}\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport useDimensions from 'react-use-dimensions';\nimport * as ReactKonva from 'react-konva';\nimport {useStrictMode} from 'react-konva';\nimport {useDendriform, useCheckbox, useInput} from 'dendriform';\nimport type {Dendriform} from 'dendriform';\nimport type {MoscNoteMs} from '@xenpaper/mosc';\nimport {Box, Flex} from './layout/Layout';\nimport styled from 'styled-components';\nimport hsl from 'hsl-to-hex';\n\nimport {centsToRatio} from '@xenpaper/mosc';\n\nuseStrictMode(true);\nconst {Stage, Layer, Rect, Group, Text, Line} = ReactKonva as any;\n\nexport type RulerState = {\n    notes: Map<string,MoscNoteMs>;\n    notesActive: Map<string,MoscNoteMs>;\n    collect: boolean;\n    viewPan: number;\n    viewZoom: number;\n    colourMode: string;\n    colourModeThreshold: number;\n    colourModeSoft: boolean;\n    rootHz?: number;\n    octaveSize?: number;\n    plots?: MoscNoteMs[][];\n};\n\nconst LOW_HZ_LIMIT = 20;\nconst ZOOM_SPEED = 1.1;\n\nconst hzToPan = (hz: number): number => Math.log2(hz / LOW_HZ_LIMIT);\n\nconst panToHz = (pan: number): number => Math.pow(2, pan) * LOW_HZ_LIMIT;\n\nconst panToCents = (pan: number): number => pan * 1200;\n\nconst panToPx = (pan: number, viewPan: number, viewZoom: number, height: number): number => {\n    return height * 0.5 - ((pan - viewPan) * height / viewZoom);\n};\n\nconst pxToPan = (px: number, viewPan: number, viewZoom: number, height: number): number => {\n    return viewPan - ((px - (height * 0.5)) / height * viewZoom);\n};\n\nconst hzInRange = (hz: number, [lowHz, highHz]: [number,number]) => {\n    return hz >= lowHz && hz <= highHz;\n};\n\n// this is so completely stupid\n// and doesnt even work with non 2x octave sizes\n// but i'm done with this\nconst getGradientColorFromNote = (note: MoscNoteMs): string => {\n    const matched = note.label.match(/([\\d.]+)c/);\n    if(!matched) {\n        return hsl(0, 100, 66);\n    }\n    const hue = Math.floor(Number(matched[1]) / 1200 * 360 + 180);\n    return hsl(hue, 100, 66);\n};\n\nconst getColorFromNoteProximity = (note: MoscNoteMs, proxNotes: MoscNoteMs[], threshold: number, hard: boolean): string => {\n    const noteCents = panToCents(hzToPan(note.hz));\n    let distance = Math.min(\n        ...proxNotes\n            .map(note => panToCents(hzToPan(note.hz)))\n            .map(cents => Math.abs(noteCents - cents))\n    ) / threshold;\n\n    if(hard) {\n        distance = distance > 1 ? 1000 : distance;\n    }\n\n    return hsl(Math.round(360 - (Math.min(distance, 2) * 80)), 100, Math.round(Math.max(1 - distance * 0.5, 0) * 50 + 10));\n};\n\nexport type InitialRulerState = {\n    lowHz?: number;\n    highHz?: number;\n    rootHz?: number;\n    octaveSize?: number;\n    plots?: MoscNoteMs[][];\n};\n\nexport function useRulerState({lowHz, highHz, ...rest}: InitialRulerState = {}) {\n    return useDendriform<RulerState>(() => {\n\n        let viewPan = hzToPan(220 * 1.5);\n        let viewZoom = 1.5;\n\n        if(lowHz && highHz) {\n            const lowPan = hzToPan(lowHz);\n            const highPan = hzToPan(highHz);\n            viewPan = (lowPan + highPan) * 0.5;\n            viewZoom = highPan - lowPan;\n        }\n\n        return {\n            notes: new Map(),\n            notesActive: new Map(),\n            collect: true,\n            viewPan,\n            viewZoom,\n            colourMode: 'gradient',\n            colourModeThreshold: 15,\n            colourModeSoft: true,\n            ...rest\n        };\n    });\n};\n\ntype Props = {\n    rulerState: Dendriform<RulerState,any>;\n};\n\nexport function PitchRuler(props: Props): React.ReactElement|null {\n    const {rulerState} = props;\n\n    const onClear = useCallback(() => {\n        rulerState.set(draft => {\n            draft.notes.clear();\n        });\n    }, []);\n\n    return <Flex flexDirection=\"column\" style={{height: '100%'}}>\n        <Flex pt={2} px={2} flexWrap=\"wrap\">\n            <Flex flexShrink={0} pb={2}>\n                <Box mr={3}>\n                    {rulerState.render('collect', form => (\n                        <Label>\n                            <Box as=\"span\" mr={2}>collect</Box>\n                            <input type=\"checkbox\" {...useCheckbox(form)} />\n                        </Label>\n                    ))}\n                </Box>\n                <Box mr={3}>\n                    <Button onClick={onClear}>clear</Button>\n                </Box>\n            </Flex>\n            <Flex flexShrink={0} pb={2}>\n                {rulerState.render('colourMode', form => <>\n                    <Box mr={3}>\n                        <Label>\n                            <Box as=\"span\" mr={2}>colour</Box>\n                            <select {...useInput(form)}>\n                                <option value=\"gradient\">Gradient</option>\n                                <option value=\"proxnotes\">Proximity to notes</option>\n                                {rulerState.render('plots', plots => <>\n                                    {(plots.useValue() ?? []).map((plot, i) => (\n                                        <option key={i} value={`proxplot${i}`}>Proximity to plot {i+1}</option>\n                                    ))}\n                                </>)}\n                            </select>\n                        </Label>\n                    </Box>\n                    {form.useValue() !== 'gradient' && <>\n                        <Box mr={3}>\n                            {rulerState.render('colourModeThreshold', form => (\n                                <Label>\n                                    <Box as=\"span\" mr={2}>threshold</Box>\n                                    <input\n                                        type=\"number\"\n                                        value={`${form.useValue()}`}\n                                        onChange={(e) => form.set(Number(e.target.value))}\n                                        min=\"1\"\n                                        max=\"100\"\n                                        step=\"1\"\n                                    />\n                                </Label>\n                            ))}\n                        </Box>\n                        <Box mr={3}>\n                            {rulerState.render('colourModeSoft', form => (\n                                <Label>\n                                    <Box as=\"span\" mr={2}>soft</Box>\n                                    <input type=\"checkbox\" {...useCheckbox(form)} />\n                                </Label>\n                            ))}\n                        </Box>\n                    </>}\n                </>)}\n            </Flex>\n        </Flex>\n        <PitchRulerCanvas {...props} />\n    </Flex>;\n}\n\ntype DragStartState = {\n    startPan: number;\n    startZoom: number;\n    startDrag: number;\n};\n\nfunction PitchRulerCanvas(props: Props): React.ReactElement|null {\n    const [dimensionsRef, {width = 0, height = 0}] = useDimensions();\n\n    const rulerState = props.rulerState.useValue();\n    const {\n        viewPan,\n        viewZoom,\n        rootHz,\n        octaveSize,\n        plots = [],\n        notes,\n        notesActive,\n        colourMode,\n        colourModeThreshold,\n        colourModeSoft\n    } = rulerState;\n\n    const visibleRange: [number,number] = [\n        panToHz(pxToPan(height, viewPan, viewZoom, height)),\n        panToHz(pxToPan(0, viewPan, viewZoom, height))\n    ];\n\n    const total = plots.length + 1;\n    const noteSetWidth = (width - 60) / total;\n\n    //\n    // getters\n    //\n\n    const getY = useCallback((hz: number): number => {\n        return panToPx(hzToPan(hz), viewPan, viewZoom, height);\n    }, [viewPan, viewZoom, height]);\n\n    const getColor = useCallback((note: MoscNoteMs): string => {\n        if(colourMode === 'gradient') {\n            return getGradientColorFromNote(note);\n        }\n\n        let compare: MoscNoteMs[] = [];\n        if(colourMode === 'proxnotes') {\n            compare = Array.from(notes.values());\n        } else if(colourMode.startsWith('proxplot')) {\n            const index = Number(colourMode.replace('proxplot',''));\n            compare = plots[index] ?? [];\n        }\n\n        return getColorFromNoteProximity(\n            note,\n            compare,\n            colourModeThreshold,\n            !colourModeSoft\n        );\n    }, [colourMode, colourModeThreshold, colourModeSoft, notes, plots]);\n\n    //\n    // interactions\n    //\n\n    const dragStartState = useRef<DragStartState|null>(null);\n    const [dragging, setDragging] = useState<boolean>(false);\n\n    const handleMouseDown = useCallback(({evt}) => {\n        evt.preventDefault();\n        dragStartState.current = {\n            startPan: viewPan,\n            startZoom: viewZoom,\n            startDrag: pxToPan(evt.clientY, viewPan, viewZoom, height)\n        };\n        setDragging(true);\n    }, [viewPan, viewZoom, height]);\n\n    const handleMouseMove = useCallback(({evt}) => {\n        evt.preventDefault();\n        const dragState = dragStartState.current;\n        if(dragState) {\n            const nowDrag = pxToPan(evt.clientY, dragState.startPan, dragState.startZoom, height);\n\n            props.rulerState.set(draft => {\n                draft.viewPan = dragState.startPan - nowDrag + dragState.startDrag;\n            });\n        }\n    }, [height]);\n\n    useEffect(() => {\n        const onMouseUp = () => {\n            dragStartState.current = null;\n            setDragging(false);\n        };\n\n        window.addEventListener('mouseup', onMouseUp);\n        return () => window.removeEventListener('mouseup', onMouseUp);\n    }, []);\n\n    const handleWheel = useCallback(({evt}) => {\n        evt.preventDefault();\n        props.rulerState.set(draft => {\n            draft.viewZoom *= evt.deltaY > 0 ? ZOOM_SPEED : evt.deltaY < 0 ? 1/ZOOM_SPEED : 1\n        });\n    }, []);\n\n    const handleTouchStart = useCallback(({evt}) => {\n        evt.preventDefault();\n        // console.log('handleTouchStart', {evt});\n    }, []);\n\n    const handleTouchMove = useCallback(({evt}) => {\n        evt.preventDefault();\n        // console.log('handleTouchMove', {evt});\n    }, []);\n\n    const handleTouchEnd = useCallback(({evt}) => {\n        evt.preventDefault();\n        // console.log('handleTouchEnd', {evt});\n    }, []);\n\n    // TODO zoom toward cursor position\n    // TODO zoom on touch devices\n\n    //\n    // render\n    //\n\n    const style = {\n        height: '100%',\n        width: '100%',\n        backgroundColor: '#080b0e',\n        cursor: dragging ? 'grabbing' : 'grab'\n    };\n\n    return <div ref={dimensionsRef} style={style}>\n        <Stage\n            width={width}\n            height={height}\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onWheel={handleWheel}\n            onTouchStart={handleTouchStart}\n            onTouchMove={handleTouchMove}\n        >\n            <Layer>\n                {rootHz && octaveSize &&\n                    <CentsGrid\n                        rootHz={rootHz}\n                        octaveSize={octaveSize}\n                        getY={getY}\n                        width={width}\n                        visibleRange={visibleRange}\n                    />\n                }\n                {rootHz && octaveSize &&\n                    <RootGrid\n                        rootHz={rootHz}\n                        octaveSize={octaveSize}\n                        getY={getY}\n                        width={width}\n                        visibleRange={visibleRange}\n                    />\n                }\n                {rulerState.collect &&\n                    <NoteSet\n                        notes={Array.from(notes.values())}\n                        getY={getY}\n                        width={noteSetWidth}\n                        x={0}\n                        visibleRange={visibleRange}\n                        getColor={getColor}\n                    />\n                }\n                {(plots || []).map((plot, index) => {\n                    return <NoteSet\n                        key={index}\n                        notes={plot}\n                        getY={getY}\n                        width={noteSetWidth}\n                        x={noteSetWidth * (index + 1)}\n                        visibleRange={visibleRange}\n                        getColor={getColor}\n                    />\n                })}\n                <NoteSet\n                    notes={Array.from(notesActive.values())}\n                    getY={getY}\n                    color=\"#FFFFFF\"\n                    width={noteSetWidth}\n                    x={0}\n                    visibleRange={visibleRange}\n                />\n            </Layer>\n        </Stage>\n    </div>;\n}\n\n\n\ntype NoteSetProps = {\n    notes: MoscNoteMs[];\n    getY: (hz: number) => number;\n    getColor?: (note: MoscNoteMs) => string;\n    color?: string;\n    width: number;\n    x: number;\n    visibleRange: [number,number];\n};\n\nconst NoteSet = React.memo(function NoteSet(props: NoteSetProps): React.ReactElement {\n    const {\n        width,\n        notes,\n        getColor = getGradientColorFromNote,\n        getY,\n        x,\n        visibleRange\n    } = props;\n\n    const visibleNotes = notes.filter(note => hzInRange(note.hz, visibleRange));\n\n    return <>\n        {visibleNotes.map((note, index) => {\n            const color = props.color ?? getColor(note);\n            return <Group key={index} x={x} y={getY(note.hz)}>\n                <Line\n                    stroke={color}\n                    strokeWidth={1}\n                    points={[0, 0, width, 0]}\n                />\n                <Text\n                    text={note.label}\n                    fill={color}\n                    align=\"center\"\n                    width={width}\n                    y={-13}\n                />\n            </Group>;\n        })}\n    </>;\n});\n\nconst Label = styled.label`\n    user-select: none;\n`;\n\nconst Button = styled.button`\n    border: none;\n    display: block;\n    padding: .25rem .5rem;\n    cursor: pointer;\n    background-color: ${props => props.theme.colors.highlights.unknown};\n    color: ${props => props.theme.colors.background.normal};\n    position: relative;\n    outline: none;\n    opacity: 0.7;\n\n    transition: opacity .2s ease-out;\n\n    &:hover, &:focus, &:active {\n        opacity: 1;\n    }\n`;\n\ntype RootGridProps = {\n    octaveSize: number;\n    rootHz: number;\n    width: number;\n    getY: (hz: number) => number;\n    visibleRange: [number,number];\n};\n\nconst ROOT_GRID_POSITIONS = [7,6,5,4,3,2,1,0,-1,-2,-3];\n\nconst RootGrid = React.memo(function RootGrid(props: RootGridProps): React.ReactElement {\n    const {getY, rootHz, octaveSize, width, visibleRange} = props;\n\n    const lines = ROOT_GRID_POSITIONS\n        .map(i => [i, rootHz * Math.pow(octaveSize,i)])\n        .filter(([,hz]) => hzInRange(hz, visibleRange));\n\n    return <>\n        {lines.map(([i, hz]) => {\n            const y = getY(hz);\n            return <Group key={i} y={y}>\n                <Line\n                    stroke={hsl(208, 32, (8 - Math.abs(i)) * 12)}\n                    strokeWidth={1}\n                    points={[0, 0, width - 60, 0]}\n                    dash={[4,4]}\n                />\n                <Text\n                    text={`${hz}Hz`}\n                    fill={hsl(208, 32, (8 - Math.abs(i)) * 24)}\n                    align=\"left\"\n                    width={55}\n                    x={width - 55}\n                    y={-5}\n                />\n            </Group>;\n        })}\n    </>;\n});\n\nconst CENT_GRID_POSITIONS = [1,0,-1];\n\ntype CentsGridProps = {\n    octaveSize: number;\n    rootHz: number;\n    width: number;\n    getY: (hz: number) => number;\n    visibleRange: [number,number];\n};\n\nconst CentsGrid = React.memo(function CentsGrid(props: CentsGridProps): React.ReactElement {\n    const {getY, rootHz, octaveSize, width, visibleRange} = props;\n\n    const lines: [number,number,number][] = [];\n\n    CENT_GRID_POSITIONS.forEach(octave => {\n        for(let i = 100; i < octaveSize * 600; i+=100) {\n            const hz = rootHz * centsToRatio(i, octave);\n            if(hzInRange(hz, visibleRange)) {\n                lines.push([i, hz, octave]);\n            }\n        }\n    });\n\n    return <>\n        {lines.map(([cents, hz, octave]) => {\n            const y = getY(hz);\n            return <Group key={hz} y={y}>\n                <Line\n                    stroke={hsl(208, 32, (2 - Math.abs(octave)) * 12)}\n                    strokeWidth={1}\n                    points={[0, 0, width - 60, 0]}\n                />\n                <Text\n                    text={`${cents}c`}\n                    fill={hsl(208, 32, (2 - Math.abs(octave)) * 24)}\n                    align=\"left\"\n                    width={55}\n                    x={width - 55}\n                    y={-5}\n                />\n            </Group>;\n        })}\n    </>;\n});\n","import Parser, {All, Any, Optional, Star, Node} from 'rd-parse';\n\nexport type NodeType = {\n    type: string;\n    delimiter: boolean;\n    pos: number;\n    len: number;\n    time?: [number, number];\n};\n\nexport type Meta = {\n    pos: number;\n};\n\nexport type NodeCreator = (args: any) => {[key: string]: any};\n\nfunction node/*<T extends NodeType>*/(type: string, match: RegExp|string, fn: NodeCreator) {\n    return Node(match, (value: unknown, meta: Meta) => {\n        return {\n            type,\n            delimiter: false,\n            ...fn(value),\n            pos: meta.pos\n        };\n    });\n}\n\nconst sumLen = (nodes: NodeType[]): number => nodes.reduce((len: number, node: NodeType) => len + node.len, 0);\n\n//\n// delimiters and whitespace\n//\n\nconst delimiter = ([text]: [string]) => ({\n    delimiter: true,\n    len: text.length\n});\n\nexport type DelimiterType = NodeType & {\n    delimiter: true;\n};\n\nexport const Semicolon = node/*<DelimiterType>*/(\n    'Semicolon',\n    /(^[;]\\s*)/,\n    delimiter\n);\n\nexport const Colon = node/*<DelimiterType>*/(\n    'Colon',\n    /(^[:]\\s*)/,\n    delimiter\n);\n\nexport const BarLine = node/*<DelimiterType>*/(\n    'BarLine',\n    '|',\n    () => ({\n        len: 1,\n        delimiter: true\n    })\n);\n\nexport const Whitespace = node/*<DelimiterType>*/(\n    'Whitespace',\n    /(^[,\\s]+)/,\n    ([whitespace]) => ({\n        len: whitespace.length,\n        delimiter: true\n    })\n);\n\n//\n// pitches\n//\n\ntype OctaveModifierType = NodeType & {\n    octave: number;\n};\n\nexport const OctaveModifier = node/*<OctaveModifierType>*/(\n    'OctaveModifier',\n    /^(['\"]+|`+)/,\n    ([chars]) => ({\n        octave: (chars.split(\"'\").length - 1) + ((chars.split('\"').length - 1) * 2) - (chars.split('`').length - 1),\n        len: chars.length\n    })\n);\n\nexport type PitchCentsType = NodeType & {\n    cents: number;\n};\n\nexport const PitchCents = node/*<PitchCentsType>*/(\n    'PitchCents',\n    /^(\\d+|\\d+\\.(\\d+)?)c/,\n    ([cents]) => ({\n        cents: Number(cents),\n        len: cents.length + 1\n    })\n);\n\nexport type PitchOctaveDivisionType = NodeType & {\n    numerator: number;\n    denominator: number;\n    octaveSize: number;\n};\n\nexport const PitchOctaveDivision = node/*<PitchOctaveDivisionType>*/(\n    'PitchOctaveDivision',\n    /^([\\d]+)[\\\\/]([\\d]+)o(\\d)?(\\/(\\d))?/,\n    ([numerator, denominator, octaveSize = '', slash = '', octaveDenom = '']) => ({\n        numerator: Number(numerator),\n        denominator: Number(denominator),\n        octaveSize: Number(octaveSize || 2) / Number(octaveDenom || 1),\n        len: numerator.length + denominator.length + octaveSize.length + 2 + slash.length\n    })\n);\n\nexport const PitchOctaveDivision2 = node/*<PitchOctaveDivisionType>*/(\n    'PitchOctaveDivision',\n    /^([\\d]+)[\\\\]([\\d]+)/,\n    ([numerator, denominator]) => ({\n        numerator: Number(numerator),\n        denominator: Number(denominator),\n        octaveSize: 2,\n        len: numerator.length + denominator.length + 1\n    })\n);\n\nexport type PitchRatioType = NodeType & {\n    numerator: number;\n    denominator: number;\n};\n\nexport const PitchRatio = node/*<PitchRatioType>*/(\n    'PitchRatio',\n    /^([\\d]+)\\/([\\d]+)/,\n    ([numerator, denominator]) => ({\n        numerator: Number(numerator),\n        denominator: Number(denominator),\n        len: numerator.length + denominator.length + 1\n    })\n);\n\nexport type PitchDegreeType = NodeType & {\n    degree: number;\n};\n\nexport const PitchDegree = node/*<PitchDegreeType>*/(\n    'PitchDegree',\n    /^([\\d]+)/,\n    ([degree]) => ({\n        degree: Number(degree),\n        len: degree.length\n    })\n);\n\nexport type PitchHzType = NodeType & {\n    hz: number;\n};\n\nexport const PitchHz = node/*<PitchHzType>*/(\n    'PitchHz',\n    /^(\\d+|\\d+\\.(\\d+)?)hz/i,\n    ([hz]: [string]) => ({\n        hz: Number(hz),\n        len: hz.length + 2\n    })\n);\n\nexport type PitchType = NodeType & {\n    value: PitchCentsType|PitchOctaveDivisionType|PitchRatioType|PitchDegreeType|PitchHzType;\n    octave?: OctaveModifierType;\n};\n\nexport const Pitch = node/*<PitchType>*/(\n    'Pitch',\n    All(Optional(OctaveModifier), Any(PitchCents, PitchHz, PitchOctaveDivision, PitchOctaveDivision2, PitchRatio, PitchDegree)),\n    (args) => {\n        if(args.length === 1) {\n            const [value] = args;\n            return {\n                value,\n                len: value.len\n            };\n        }\n        const [octave, value] = args;\n        return {\n            value,\n            octave,\n            len: octave.len + value.len\n        };\n    }\n);\n\nexport type PitchGroupType = Array<PitchType|DelimiterType>;\n\nexport const PitchGroup = Node(\n    All(Pitch, Star(All(Whitespace, Pitch))),\n    (elements: unknown) => elements\n);\n\n//\n// note\n//\n\nexport type HoldType = NodeType & {\n    length: number;\n};\n\nexport const Hold = node/*<HoldType>*/(\n    'Hold',\n    /^(([|]?-)+)/,\n    ([value]) => ({\n        length: value.replace(/[|]+/g, '').length,\n        len: value.length\n    })\n);\n\nexport type TailType = HoldType;\n\nexport const Tail = Any(Hold);\n\nexport type RestType = NodeType & {\n    length: number;\n};\n\nexport const Rest = node/*<RestType>*/(\n    'Rest',\n    All(/^(\\.)/),\n    ([value]: [unknown[]]) => ({\n        length: value.length,\n        len: value.length\n    })\n);\n\nexport type NoteType = NodeType & {\n    pitch: PitchType;\n    tail?: TailType;\n};\n\nexport const Note = node/*<NoteType>*/(\n    'Note',\n    All(Pitch, Optional(Tail)),\n    ([pitch, tail]: [PitchType, TailType?]) => ({\n        pitch,\n        tail,\n        len: pitch.len + (tail ? tail.len : 0)\n    })\n);\n\n//\n// chords\n//\n\nexport type RatioChordPitchType = NodeType & {\n    pitch: number;\n};\n\nexport const RatioChordPitch = node/*<RatioChordPitchType>*/(\n    'RatioChordPitch',\n    /^([\\d]+)/,\n    ([pitch]: [string]) => ({\n        pitch: Number(pitch),\n        len: pitch.length\n    })\n);\n\nexport type RatioChordPitchGroupType = Array<RatioChordPitchType|DelimiterType>;\n\nexport const RatioChordPitchGroup = Node(\n    All(RatioChordPitch, Colon, Optional(Colon), RatioChordPitch, Star(All(Colon, Optional(Colon),  RatioChordPitch))),\n    (elements: RatioChordPitchGroupType) => elements\n);\n\nexport type ChordType = NodeType & {\n    pitches: Array<RatioChordPitchType|PitchType|DelimiterType>;\n    tail?: TailType;\n};\n\nexport const Chord = node/*<ChordType>*/(\n    'Chord',\n    All('[', Any(RatioChordPitchGroup, PitchGroup), ']', Optional(Tail)),\n    ([pitches, tail]) => ({\n        pitches,\n        tail,\n        len: sumLen(pitches) + (tail ? tail.len : 0) + 2\n    })\n);\n\nexport type RatioChordType = NodeType & {\n    pitches: Array<RatioChordPitchType>;\n    tail?: TailType;\n};\n\nexport const RatioChord = node/*<RatioChordType>*/(\n    'RatioChord',\n    All(RatioChordPitchGroup, Optional(Tail)),\n    ([pitches, tail]) => ({\n        pitches,\n        tail,\n        len: sumLen(pitches) + (tail ? tail.len : 0)\n    })\n);\n\n//\n// scales\n//\n\nexport type EdoScaleType = NodeType & {\n    divisions: number;\n    octaveSize: number;\n};\n\nexport const EdoScale = node/*<EdoScaleType>*/(\n    'EdoScale',\n    /^(\\d+)ed([o\\d])(\\/(\\d))?/i,\n    ([divisions, octaveSize, slash = '', denominator = '']: [string, string, string, string]) => ({\n        divisions: Number(divisions),\n        // TODO this math should not be in the grammar\n        octaveSize: octaveSize === 'o' ? 2 : Number(octaveSize) / Number(denominator || 1),\n        len: divisions.length + octaveSize.length + 2 + slash.length\n    })\n);\n\nexport type ScaleOctaveMarkerType = NodeType;\n\nexport const ScaleOctaveMarker = node/*<ScaleOctaveMarkerType>*/(\n    'ScaleOctaveMarker',\n    \"'\",\n    () => ({\n        len: 1\n    })\n);\n\nexport type PitchGroupScalePrefixType = NodeType & {\n    prefix: string;\n};\n\nexport const PitchGroupScalePrefix = node/*<EdoScaleType>*/(\n    'PitchGroupScalePrefix',\n    /(^[m])(\\s*)/,\n    ([prefix, space]: [string, string?]) => ({\n        prefix,\n        len: prefix.length + (space ? space.length : 0)\n    })\n);\n\nexport type PitchGroupScaleType = NodeType & {\n    pitchGroupScalePrefix?: PitchGroupScalePrefixType;\n    pitches: PitchGroupType;\n    scaleOctaveMarker?: ScaleOctaveMarkerType;\n};\n\nexport const PitchGroupScale = node/*<PitchGroupScaleType>*/(\n    'PitchGroupScale',\n    All(Optional(PitchGroupScalePrefix), PitchGroup, Optional(ScaleOctaveMarker)),\n    (elements: any[]) => {\n\n        const [pitchGroupScalePrefix, pitches, scaleOctaveMarker] = Array.isArray(elements[0])\n            ? [undefined, ...elements]\n            : elements;\n\n        return {\n            pitchGroupScalePrefix,\n            pitches,\n            scaleOctaveMarker,\n            len: (pitchGroupScalePrefix ? pitchGroupScalePrefix.len : 0) + sumLen(pitches) + (scaleOctaveMarker ? scaleOctaveMarker.len : 0)\n        };\n    }\n);\n\nexport type RatioChordScaleType = NodeType & {\n    pitches: Array<RatioChordPitchType|DelimiterType>;\n    scaleOctaveMarker?: ScaleOctaveMarkerType;\n};\n\nexport const RatioChordScale = node/*<RatioChordScaleType>*/(\n    'RatioChordScale',\n    All(RatioChordPitchGroup, Optional(ScaleOctaveMarker)),\n    ([pitches, scaleOctaveMarker]: [RatioChordPitchGroupType, ScaleOctaveMarkerType?]) => ({\n        pitches,\n        scaleOctaveMarker,\n        len: sumLen(pitches) + (scaleOctaveMarker ? scaleOctaveMarker.len : 0)\n    })\n);\n\n//\n// scale setters\n//\n\nexport const Scale = Any(EdoScale, RatioChordScale, PitchGroupScale);\n\nexport type SetScaleType = NodeType & {\n    scale: EdoScaleType|RatioChordScaleType|PitchGroupScaleType;\n};\n\nexport const SetScale = node/*<SetScaleType>*/(\n    'SetScale',\n    All('{', Scale, '}'),\n    ([scale]) => ({\n        scale,\n        len: scale.len + 2\n    })\n);\n\nexport type SetRootType = NodeType & {\n    pitch: PitchType\n};\n\nexport const SetRoot = node/*<SetRootType>*/(\n    'SetRoot',\n    All('{r', Pitch, '}'),\n    ([pitch]) => ({\n        pitch,\n        len: pitch.len + 3\n    })\n);\n\n//\n// setters\n//\n\n// bpm\n\nexport type SetBpmValue = NodeType & {\n    bpm: number;\n};\n\nexport const SetBpmValue = node/*<SetBpmValueType>*/(\n    'SetBpmValue',\n    /^(\\d+(\\.\\d+)?)/,\n    ([bpm]: [string]) => ({\n        bpm: Number(bpm),\n        len: bpm.length\n    })\n);\n\nexport type SetBpmType = NodeType & {\n    bpm: number;\n};\n\nexport type SetBpmValueType = NodeType & {\n    bpm: number;\n};\n\nexport const SetBpm = node/*<SetBpmType>*/(\n    'SetBpm',\n    All(/^(bpm:\\s*)/, SetBpmValue),\n    ([prefix, value]: [string, SetBpmValueType]) => ({\n        bpm: value.bpm,\n        len: prefix.length + value.len\n    })\n);\n\n// bms (beat milliseconds)\n\nexport type SetBmsValue = NodeType & {\n    bms: number;\n};\n\nexport const SetBmsValue = node/*<SetBmsValueType>*/(\n    'SetBmsValue',\n    /^(\\d+(\\.\\d+)?)/,\n    ([bms]: [string]) => ({\n        bms: Number(bms),\n        len: bms.length\n    })\n);\n\nexport type SetBmsType = NodeType & {\n    bms: number;\n};\n\nexport type SetBmsValueType = NodeType & {\n    bms: number;\n};\n\nexport const SetBms = node/*<SetBmsType>*/(\n    'SetBms',\n    All(/^(bms:\\s*)/, SetBmsValue),\n    ([prefix, value]: [string, SetBmsValueType]) => ({\n        bms: value.bms,\n        len: prefix.length + value.len\n    })\n);\n\n\n// subdivision\n\nexport type SetSubdivisionValueType = NodeType & {\n    subdivision: number;\n    denominator: number;\n};\n\n// TODO - could be a generic number matcher\nexport const SetSubdivisionValue = node/*<SetSubdivisionValueType>*/(\n    'SetSubdivisionValue',\n    /^([\\d]+)(\\/(\\d))?/,\n    ([subdivision, slash = '', denominator = '']: [string, string, string]) => ({\n        subdivision: Number(subdivision),\n        denominator: denominator ? Number(denominator) : undefined,\n        len: subdivision.length + slash.length\n    })\n);\n\nexport type SetSubdivisionType = NodeType & {\n    subdivision: number;\n    denominator: number;\n};\n\nexport const SetSubdivision = node/*<SetSubdivisionType>*/(\n    'SetSubdivision',\n    All(/^((div:)?\\s*)/, SetSubdivisionValue),\n    ([prefix,, value]: [string, string, SetSubdivisionValueType]) => ({\n        subdivision: value.subdivision,\n        denominator: value.denominator,\n        len: prefix.length + value.len\n    })\n);\n\n// osc\n\nexport type SetOscValueType = NodeType & {\n    osc: string;\n};\n\nexport const SetOscValue = node/*<SetOscValueType>*/(\n    'SetOscValue',\n    /^([a-z0-9]*)/,\n    ([osc]: [string]) => ({\n        osc,\n        len: osc.length\n    })\n);\n\nexport type SetOscType = NodeType & {\n    osc: string;\n};\n\nexport const SetOsc = node/*<SetOscType>*/(\n    'SetOsc',\n    All(/^(osc:\\s*)/, SetOscValue),\n    ([prefix, value]: [string, SetOscValueType]) => ({\n        osc: value.osc,\n        len: prefix.length + value.len\n    })\n);\n\n// env\n\nexport type SetEnvValueType = NodeType & {\n    a: number;\n    d: number;\n    s: number;\n    r: number;\n};\n\nexport const SetEnvValue = node/*<SetEnvValueType>*/(\n    'SetEnvValue',\n    /^(([0-9])([0-9])([0-9])([0-9]))/,\n    ([all, a, d, s, r]: [string, string, string, string, string]) => ({\n        a: Number(a),\n        d: Number(d),\n        s: Number(s),\n        r: Number(r),\n        len: all.length\n    })\n);\n\nexport type SetEnvType = NodeType & {\n    a: number;\n    d: number;\n    s: number;\n    r: number;\n};\n\nexport const SetEnv = node/*<SetEnvType>*/(\n    'SetEnv',\n    All(/^(env:\\s*)/, SetEnvValue),\n    ([prefix, value]: [string, SetEnvValueType]) => ({\n        a: value.a,\n        d: value.d,\n        s: value.s,\n        r: value.r,\n        len: prefix.length + value.len\n    })\n);\n\n// ruler\n\nexport type SetRulerRangeType = NodeType & {\n    low: PitchType;\n    high: PitchType;\n};\n\nexport const SetRulerRange = node/*<SetRulerRangeType>*/(\n    'SetRulerRange',\n    All(/^(rl:)/, Pitch, ',', Pitch),\n    ([prefix, low, high]: [string, PitchType, PitchType]) => ({\n        low,\n        high,\n        len: prefix.length + 1 + low.len + high.len\n    })\n);\n\nexport type SetRulerPlotType = NodeType;\n\nexport const SetRulerPlot = node/*<SetRulerPlotType>*/(\n    'SetRulerPlot',\n    'plot',\n    () => ({\n        len: 4\n    })\n);\n\nexport type SetRulerType = SetRulerRangeType|SetRulerPlotType;\n\nexport const SetRuler = Any(SetRulerRange, SetRulerPlot);\n\n// setters\n\nexport type SetterType = SetBpmType|SetBmsType|SetSubdivisionType|SetOscType|SetEnvType|SetRulerType;\n\nexport const Setter = Any(SetBpm, SetBms, SetSubdivision, SetOsc, SetEnv, SetRuler);\n\nexport type SetterGroupType = NodeType & {\n    setters: SetterType[];\n};\n\nexport const SetterGroup = node/*<SetterGroupType>*/(\n    'SetterGroup',\n    All('(', Setter, Star(All(Semicolon, Setter)), ')'),\n    (setters: SetterType[]) => ({\n        setters,\n        len: sumLen(setters) + 2\n    })\n);\n\n//\n// comments\n//\n\nexport type CommentType = NodeType & {\n    comment: string;\n};\n\nexport const Comment = node/*<CommentType>*/(\n    'Comment',\n    /^#([^\\n]*)/,\n    ([comment]) => ({\n        comment,\n        len: comment.length + 1\n    })\n);\n\n//\n// sequence\n//\n\nexport type SequenceItemsType = RatioChordType|NoteType|ChordType|RestType|SetterGroupType|SetScaleType|SetRootType|CommentType;\n\nexport type SequenceType = NodeType & {\n    items: SequenceItemsType[];\n};\n\nexport const Sequence = node/*<SequenceType>*/(\n    'Sequence',\n    Star(Any(Comment, RatioChord, Note, Chord, Rest, SetterGroup, SetScale, SetRoot, BarLine, Whitespace)),\n    (items: SequenceItemsType[]) => ({\n        items,\n        len: sumLen(items)\n    })\n);\n\n//\n// params\n//\n\nexport type ParamEmbedType = NodeType;\n\nexport const ParamEmbed = node/*<ParamEmbedType>*/(\n    'ParamEmbed',\n    'embed',\n    () => ({\n        len: 5\n    })\n);\n\nexport type ParamType = ParamEmbedType;\n\nexport const Param = Any(ParamEmbed);\n\nexport type ParamGroupType = NodeType & {\n    params: ParamType[];\n};\n\nexport const ParamGroup = node/*<ParamGroupType>*/(\n    'ParamGroup',\n    All(Param, Star(All(Semicolon, Param)), ':'),\n    (params: ParamType[]) => ({\n        params,\n        len: sumLen(params) + 1\n    })\n);\nexport type XenpaperAST = NodeType & {\n    sequence?: SequenceType;\n    paramGroup?: ParamGroupType;\n};\n\nexport const XenpaperGrammar = node/*<XenpaperAST>*/(\n    'XenpaperGrammar',\n    All(Optional(ParamGroup), Optional(Sequence)),\n    (parts: Array<SequenceType>) => {\n        const paramGroup = parts.find(part => part.type === 'ParamGroup');\n        const sequence = parts.find(part => part.type === 'Sequence');\n        return {\n            sequence,\n            paramGroup,\n            len: sequence ? sequence.len : 0\n        };\n    }\n);\n\nconst parser = Parser(XenpaperGrammar);\n\nexport const XenpaperGrammarParser = (input: string): XenpaperAST => {\n    try {\n        return parser(input);\n    } catch(e) {\n        // eslint-disable-next-line no-console\n        console.error('e', e);\n        throw new Error(e.message.replace(/Remainder:.*/s, ''));\n    }\n};\n","import type {XenpaperAST} from './grammar';\n\nexport type HighlightColor = 'delimiter'\n    |'pitch'\n    |'chord'\n    |'scaleGroup'\n    |'scale'\n    |'setterGroup'\n    |'setter'\n    |'comment'\n    |'commentStart'\n    |'unknown'\n    |'error'\n    |'errorMessage';\n\nexport type CharData = {\n    color: HighlightColor;\n    playTime?: [number, number];\n};\n\nconst colorMap = new Map<string,HighlightColor>([\n    ['Semicolon','delimiter'],\n    ['Colon','delimiter'],\n    // ['PitchCents','pitch'],\n    // ['PitchOctaveDivision','pitch'],\n    // ['PitchRatio','pitch'],\n    // ['PitchDegree','pitch'],\n    // ['PitchHz','pitch'],\n    // ['OctaveModifier','pitch'],\n    ['Pitch','pitch'],\n    ['RatioChordPitch','pitch'],\n    ['Chord','chord'],\n    ['Chord.Whitespace','pitch'],\n    // ['RatioChord'],\n    ['Hold','pitch'],\n    ['Rest','delimiter'],\n    ['BarLine','delimiter'],\n    ['Whitespace','delimiter'],\n    ['EdoScale','scale'],\n    ['PitchGroupScale','scale'],\n    ['PitchGroupScale.Pitch','scale'],\n    ['PitchGroupScale.Whitespace','scale'],\n    ['RatioChordScale','scale'],\n    ['RatioChordScale.RatioChordPitch','scale'],\n    ['RatioChordScale.Colon','scale'],\n    ['ScaleOctaveMarker','scale'],\n    ['SetScale','scaleGroup'],\n    ['SetRoot','scaleGroup'],\n    ['SetRoot.Pitch','scale'],\n    ['SetBpm','setter'],\n    ['SetBms','setter'],\n    ['SetSubdivision','setter'],\n    ['SetOsc','setter'],\n    ['SetEnv','setter'],\n    ['SetRulerPlot','setter'],\n    ['SetRulerRange','setter'],\n    ['SetRulerRange.Pitch','setter'],\n    ['SetterGroup','setterGroup'],\n    ['SetterGroup.Semicolon','setterGroup'],\n    ['Comment','comment']\n]);\n\n// need to pass playhead time in\nconst extract = (chars: CharData[], data: any, parent: string, withinTime?: number): void => {\n    if(Array.isArray(data)) {\n        data.forEach(value => extract(chars, value, parent, withinTime));\n        return;\n    }\n    if(data instanceof Object) {\n        const color = colorMap.get(`${parent}.${data.type}`) || colorMap.get(data.type);\n        const time = withinTime ?? data.time;\n\n        if(typeof data.pos === 'number' && typeof data.len === 'number' && color) {\n            for(let i = 0; i < data.len; i++) {\n                chars[data.pos + i] = {\n                    color: (color === 'comment' && i === 0) ? 'commentStart' : color,\n                    playTime: time\n                };\n            }\n        }\n        Object.keys(data).forEach(key => {\n            extract(chars, data[key], data.type, time);\n        });\n        return;\n    }\n};\n\nexport const grammarToChars = ({sequence}: XenpaperAST): CharData[] => {\n    if(!sequence) return [];\n    const {items} = sequence;\n    const chars: CharData[] = [];\n    extract(chars, items, '');\n    return chars;\n};\n","import type {\n    XenpaperAST,\n    SetScaleType,\n    NoteType,\n    ChordType,\n    RatioChordType,\n    TailType,\n    PitchType,\n    PitchRatioType,\n    PitchCentsType,\n    PitchHzType,\n    PitchOctaveDivisionType,\n    PitchDegreeType,\n    PitchGroupScaleType,\n    EdoScaleType,\n    RatioChordScaleType,\n    RatioChordPitchType,\n    HoldType,\n    RestType,\n    SetterGroupType,\n    SetterType,\n    SetSubdivisionType,\n    SetBpmType,\n    SetBmsType,\n    SetRootType,\n    SetOscType,\n    SetEnvType,\n    SetRulerRangeType,\n    DelimiterType,\n} from \"./grammar\";\n\nimport type {\n    MoscScore,\n    MoscItem,\n    MoscNote,\n    MoscNoteMs,\n    MoscTempo,\n    MoscParam,\n    MoscEnd,\n} from \"@xenpaper/mosc\";\n\nimport {\n    centsToRatio,\n    octaveDivisionToRatio,\n    timeToMs,\n    ratioToCents,\n} from \"@xenpaper/mosc\";\n\n//\n// utils\n//\n\nconst limit = (name: string, value: number, min: number, max: number): void => {\n    if (value < min || value > max) {\n        throw new Error(\n            `${name} must be between ${min} and ${max}, got ${value}`\n        );\n    }\n};\n\n//\n// pitch math\n//\n\nexport const pitchToRatio = (pitch: PitchType, context: Context): number => {\n    const { scale, octaveSize } = context;\n    limit(\"Equave size\", octaveSize, -20, 20);\n\n    const { type } = pitch.value;\n    const octaveMulti = Math.pow(octaveSize, pitch?.octave?.octave || 0);\n\n    if (type === \"PitchRatio\") {\n        const { numerator, denominator } = pitch.value as PitchRatioType;\n        const ratio = numerator / denominator;\n        limit(\"Pitch ratio\", ratio, 0, 100);\n        return ratio * octaveMulti;\n    }\n\n    if (type === \"PitchCents\") {\n        const { cents } = pitch.value as PitchCentsType;\n        limit(\"Cents\", cents, -12000, 12000);\n        return centsToRatio(cents) * octaveMulti;\n    }\n\n    if (type === \"PitchOctaveDivision\") {\n        const { numerator, denominator, octaveSize } =\n            pitch.value as PitchOctaveDivisionType;\n        return (\n            octaveDivisionToRatio(numerator, denominator, octaveSize) *\n            octaveMulti\n        );\n    }\n\n    if (type === \"PitchDegree\") {\n        const { degree } = pitch.value as PitchDegreeType;\n        return pitchDegreeToRatio(degree, scale, octaveSize) * octaveMulti;\n    }\n\n    throw new Error(`Unknown pitch type \"${type}\"`);\n};\n\nconst edoToRatios = (edoSize: number, octaveSize: number): number[] => {\n    const ratios: number[] = [];\n    for (let i = 0; i < edoSize; i++) {\n        ratios.push(octaveDivisionToRatio(i, edoSize, octaveSize));\n    }\n    return ratios;\n};\n\nconst pitchDegreeWrap = (degree: number, scale: number[]): [number, number] => {\n    limit(\"Scale degree\", degree, -1000, 1000);\n\n    const steps = scale.length;\n    let octave = 0;\n\n    while (degree >= steps && octave > -20) {\n        degree -= steps;\n        octave++;\n    }\n    while (degree < 0 && octave < 20) {\n        degree += steps;\n        octave--;\n    }\n\n    return [degree, octave];\n};\n\nconst pitchDegreeToRatio = (\n    degree: number,\n    scale: number[],\n    octaveSize: number\n): number => {\n    limit(\"Equave size\", octaveSize, -20, 20);\n\n    if (scale.length === 0) {\n        return 1;\n    }\n\n    const [wrappedDegree, octave] = pitchDegreeWrap(degree, scale);\n    return scale[wrappedDegree] * Math.pow(octaveSize, octave);\n};\n\nconst pitchToHz = (pitch: PitchType, context: Context): number => {\n    if (pitch.value.type === \"PitchHz\") {\n        const octaveMulti = Math.pow(\n            context.octaveSize,\n            pitch?.octave?.octave || 0\n        );\n        const hz = (pitch.value as PitchHzType).hz * octaveMulti;\n        limit(\"Hz\", hz, 0, 20000);\n        return hz;\n    }\n    return pitchToRatio(pitch, context) * context.rootHz;\n};\n\nconst tailToTime = (\n    tail: TailType | undefined,\n    context: Context\n): { time: number; timeEnd: number } => {\n    const time = context.time;\n\n    const duration =\n        tail && tail.type === \"Hold\" ? (tail as HoldType).length + 1 : 1;\n\n    context.time += duration * context.subdivision;\n    const timeEnd = context.time;\n\n    return {\n        time,\n        timeEnd,\n    };\n};\n\n//\n// labels\n//\n\nconst ratioWrap = (ratio: number, octaveSize: number): number => {\n    while (ratio < 1) {\n        ratio *= octaveSize;\n    }\n    while (ratio > octaveSize) {\n        ratio /= octaveSize;\n    }\n    return ratio;\n};\n\nconst ratioToCentsLabel = (ratio: number, octaveSize: number): string => {\n    return `${ratioToCents(ratioWrap(ratio, octaveSize)).toFixed(1)}c`;\n};\n\nexport const pitchToLabel = (pitch: PitchType, context: Context): string => {\n    const { type } = pitch.value;\n\n    if (type === \"PitchHz\") {\n        const { hz } = pitch.value as PitchHzType;\n        return `${hz}Hz`;\n    }\n\n    if (type === \"PitchCents\") {\n        const { cents } = pitch.value as PitchCentsType;\n        return `${cents}c`;\n    }\n\n    const centsLabel = ratioToCentsLabel(\n        pitchToRatio(pitch, context),\n        context.octaveSize\n    );\n\n    if (type === \"PitchRatio\") {\n        const { numerator, denominator } = pitch.value as PitchRatioType;\n        return `${numerator}/${denominator}  ${centsLabel}`;\n    }\n\n    if (type === \"PitchOctaveDivision\") {\n        const { numerator, denominator } =\n            pitch.value as PitchOctaveDivisionType;\n        return `${numerator}\\\\${denominator}  ${centsLabel}`;\n    }\n\n    if (type === \"PitchDegree\") {\n        const { degree } = pitch.value as PitchDegreeType;\n        const [wrappedDegree] = pitchDegreeWrap(degree, context.scale);\n        return context.scaleLabels[wrappedDegree];\n    }\n\n    throw new Error(`Unknown pitch type \"${type}\"`);\n};\n\nconst edoToLabels = (\n    edoSize: number,\n    ratios: number[],\n    octaveSize: number\n): string[] => {\n    const labels: string[] = [];\n    for (let i = 0; i < edoSize; i++) {\n        const centsLabel = ratioToCentsLabel(ratios[i], octaveSize);\n        labels.push(`${i}\\\\${edoSize}  ${centsLabel}`);\n    }\n    return labels;\n};\n\n//\n// converters\n//\n\nconst ENV_VALUES = [0, 0.003, 0.006, 0.01, 0.033, 0.1, 0.33, 1, 3.3, 10];\n\ntype Context = {\n    rootHz: number;\n    time: number;\n    subdivision: number;\n    scale: number[];\n    scaleLabels: string[];\n    octaveSize: number;\n};\n\nconst times: [number, number][] = [];\n\nconst noteToMosc = (note: NoteType, context: Context): MoscNote[] => {\n    const timeProps = tailToTime(note.tail, context);\n\n    // mutate ast node to add time\n    const arr: [number, number] = [timeProps.time, timeProps.timeEnd];\n    times.push(arr);\n    note.time = arr;\n\n    const hz = pitchToHz(note.pitch, context);\n    const label = pitchToLabel(note.pitch, context);\n\n    return [\n        {\n            type: \"NOTE_TIME\",\n            hz,\n            label,\n            ...timeProps,\n        },\n    ];\n};\n\nconst chordToMosc = (\n    chord: ChordType | RatioChordType,\n    context: Context\n): MoscNote[] => {\n    const { tail, pitches } = chord;\n    const timeProps = tailToTime(tail, context);\n\n    // mutate ast node to add time\n    const arr: [number, number] = [timeProps.time, timeProps.timeEnd];\n    times.push(arr);\n    chord.time = arr;\n\n    const pitchTypes: MoscNote[] = pitches\n        .filter((pitch): pitch is PitchType => pitch.type === \"Pitch\")\n        .map((pitch: any) => {\n            const hz = pitchToHz(pitch as PitchType, context);\n            const label = pitchToLabel(pitch as PitchType, context);\n\n            return {\n                type: \"NOTE_TIME\",\n                hz,\n                label,\n                ...timeProps,\n            };\n        });\n\n    const firstRatioPitch = pitches.find(\n        (pitch: PitchType | RatioChordPitchType | DelimiterType) => {\n            return pitch.type === \"RatioChordPitch\";\n        }\n    ) as RatioChordPitchType | undefined;\n\n    const firstDenominator = (firstRatioPitch as RatioChordPitchType)?.pitch;\n\n    if (firstDenominator <= 0) {\n        throw new Error(`Chords cannot contain a ratio of ${firstDenominator}`);\n    }\n\n    const ratioPitchTypes: MoscNote[] = [];\n    const addRatioPitchType = (numerator: number): void => {\n        ratioPitchTypes.push({\n            type: \"NOTE_TIME\",\n            hz: (numerator / firstDenominator) * context.rootHz,\n            label: `${numerator}/${firstDenominator}  ${ratioToCentsLabel(\n                numerator / firstDenominator,\n                context.octaveSize\n            )}`,\n            ...timeProps,\n        });\n    };\n\n    let colons = 0;\n    let lastNumerator = 1;\n    pitches.forEach((pitch: any) => {\n        if (pitch.type === \"RatioChordPitch\") {\n            const numerator = (pitch as RatioChordPitchType).pitch;\n            if (numerator <= 0) {\n                throw new Error(\n                    `Chords cannot contain a ratio of ${numerator}`\n                );\n            }\n\n            if (colons == 2) {\n                while (lastNumerator < numerator - 1) {\n                    lastNumerator++;\n                    addRatioPitchType(lastNumerator);\n                }\n            }\n\n            addRatioPitchType(numerator);\n            lastNumerator = numerator;\n            colons = 0;\n            return;\n        }\n        if (pitch.type === \"Colon\") {\n            colons++;\n        }\n    });\n\n    return pitchTypes.concat(ratioPitchTypes);\n};\n\nconst setScale = (setScale: SetScaleType, context: Context): void => {\n    const { scale } = setScale;\n    const { type } = scale;\n    if (type === \"PitchGroupScale\") {\n        const { pitches, scaleOctaveMarker, pitchGroupScalePrefix } =\n            scale as PitchGroupScaleType;\n\n        let filteredPitches: PitchType[] = pitches.filter(\n            (pitch): pitch is PitchType => !pitch.delimiter\n        ) as PitchType[];\n\n        if (pitchGroupScalePrefix && pitchGroupScalePrefix.prefix === \"m\") {\n            const degreePitches: PitchDegreeType[] = [\n                {\n                    type: \"PitchDegree\",\n                    degree: 0,\n                    delimiter: false,\n                    pos: pitchGroupScalePrefix.pos,\n                    len: 0,\n                },\n            ];\n\n            let degree = 0;\n            filteredPitches.forEach((pitch) => {\n                if (pitch.value.type !== \"PitchDegree\") {\n                    throw new Error(\n                        \"Mode scales {m} should only contain pitch degrees (0, 1, etc), not ratios, hz or any other kind of pitch\"\n                    );\n                }\n                degree += (pitch.value as PitchDegreeType).degree;\n\n                degreePitches.push({\n                    ...pitch.value,\n                    degree,\n                });\n            });\n\n            degreePitches.pop(); // ignore last degree which is assumed to complete the octave\n            filteredPitches = degreePitches.map((value) => ({\n                value,\n            })) as PitchType[];\n        }\n\n        context.scale = filteredPitches.map((pitch) =>\n            pitchToRatio(pitch, context)\n        );\n        context.scaleLabels = filteredPitches.map((pitch) =>\n            pitchToLabel(pitch, context)\n        );\n\n        if (scaleOctaveMarker) {\n            context.octaveSize = context.scale.pop() || 2;\n            context.scaleLabels.pop();\n        }\n\n        return;\n    }\n\n    if (type === \"EdoScale\") {\n        const { divisions, octaveSize } = scale as EdoScaleType;\n        context.scale = edoToRatios(divisions, octaveSize);\n        context.scaleLabels = edoToLabels(divisions, context.scale, octaveSize);\n        context.octaveSize = octaveSize;\n        return;\n    }\n\n    if (type === \"RatioChordScale\") {\n        const { pitches, scaleOctaveMarker } = scale as RatioChordScaleType;\n\n        context.scale = [];\n        context.scaleLabels = [];\n\n        let firstDenominator = -1;\n        let colons = 0;\n        let lastNumerator = 0;\n\n        const addRatio = (numerator: number): void => {\n            const ratio = numerator / firstDenominator;\n            context.scale.push(ratio);\n            const centsLabel = ratioToCentsLabel(ratio, 2);\n            context.scaleLabels.push(\n                `${numerator}/${firstDenominator}  ${centsLabel}`\n            );\n        };\n\n        pitches.forEach((pitch) => {\n            if (pitch.delimiter) {\n                colons++;\n                return;\n            }\n\n            const numerator = pitch.pitch;\n            if (firstDenominator === -1) {\n                firstDenominator = numerator;\n            }\n\n            if (colons === 2) {\n                while (lastNumerator < numerator - 1) {\n                    lastNumerator++;\n                    addRatio(lastNumerator);\n                }\n            }\n\n            addRatio(numerator);\n            lastNumerator = numerator;\n            colons = 0;\n        });\n\n        if (scaleOctaveMarker) {\n            context.octaveSize = context.scale.pop() || 2;\n            context.scaleLabels.pop();\n        }\n\n        return;\n    }\n\n    throw new Error(`Unknown scale type \"${type}\"`);\n};\n\nconst setterToMosc = (setter: SetterType, context: Context): MoscItem[] => {\n    const { type, delimiter } = setter;\n\n    if (delimiter) return [];\n\n    if (type === \"SetBpm\") {\n        const { bpm } = setter as SetBpmType;\n        return [\n            {\n                type: \"TEMPO\",\n                time: context.time,\n                bpm,\n                lerp: false,\n            },\n        ];\n    }\n\n    if (type === \"SetBms\") {\n        const { bms } = setter as SetBmsType;\n        return [\n            {\n                type: \"TEMPO\",\n                time: context.time,\n                bpm: 60000 / bms,\n                lerp: false,\n            },\n        ];\n    }\n\n    if (type === \"SetSubdivision\") {\n        const { subdivision, denominator } = setter as SetSubdivisionType;\n        context.subdivision = (denominator ?? 1) / subdivision;\n        return [];\n    }\n\n    if (type === \"SetOsc\") {\n        const { osc } = setter as SetOscType;\n        return [\n            {\n                type: \"PARAM_TIME\",\n                time: context.time,\n                value: {\n                    type: \"osc\",\n                    osc,\n                },\n            },\n        ];\n    }\n\n    if (type === \"SetEnv\") {\n        const { a, d, s, r } = setter as SetEnvType;\n        return [\n            {\n                type: \"PARAM_TIME\",\n                time: context.time,\n                value: {\n                    type: \"env\",\n                    a: ENV_VALUES[a] || 0,\n                    d: ENV_VALUES[d] || 0,\n                    s: s / 9,\n                    r: ENV_VALUES[r] || 0,\n                },\n            },\n        ];\n    }\n\n    return [];\n};\n\nconst rulerStateCaptureRootHz = (\n    initial: InitialRulerState,\n    context: Context\n): InitialRulerState => {\n    if (initial.rootHz) {\n        return initial;\n    }\n    return {\n        ...initial,\n        rootHz: context.rootHz,\n        octaveSize: context.octaveSize,\n    };\n};\n\nexport type InitialRulerState = {\n    lowHz?: number;\n    highHz?: number;\n    rootHz?: number;\n    octaveSize?: number;\n    plots: MoscNoteMs[][];\n};\n\nconst setterToRulerState = (\n    initial: InitialRulerState,\n    setter: SetterType,\n    context: Context\n): InitialRulerState => {\n    const { type, delimiter } = setter;\n\n    if (delimiter) return initial;\n\n    if (type === \"SetRulerPlot\") {\n        const newPlot = context.scale.map(\n            (ratio, i): MoscNoteMs => ({\n                type: \"NOTE_MS\",\n                ms: context.time,\n                msEnd: context.time,\n                hz: ratio * context.rootHz,\n                label: context.scaleLabels[i],\n            })\n        );\n\n        return {\n            ...initial,\n            plots: [...initial.plots, newPlot],\n        };\n    }\n\n    if (type === \"SetRulerRange\") {\n        if (initial.lowHz) {\n            return initial;\n        }\n\n        const { low, high } = setter as SetRulerRangeType;\n        return {\n            ...initial,\n            lowHz: pitchToHz(low, context),\n            highHz: pitchToHz(high, context),\n        };\n    }\n\n    return initial;\n};\n\nexport type Processed = {\n    score?: MoscScore;\n    initialRulerState?: InitialRulerState;\n};\n\nexport const processGrammar = (grammar: XenpaperAST): Processed => {\n    // console.log('grammar', JSON.stringify(grammar));\n\n    const grammarSequence = grammar.sequence;\n    if (!grammarSequence) {\n        return {};\n    }\n\n    const INITIAL_TEMPO: MoscTempo = {\n        type: \"TEMPO\",\n        time: 0,\n        bpm: 120,\n        lerp: false,\n    };\n\n    const INITIAL_OSC: MoscParam = {\n        type: \"PARAM_TIME\",\n        time: 0,\n        value: {\n            type: \"osc\",\n            osc: \"triangle\",\n        },\n    };\n\n    const INITIAL_ENV: MoscParam = {\n        type: \"PARAM_TIME\",\n        time: 0,\n        value: {\n            type: \"env\",\n            a: ENV_VALUES[2],\n            d: ENV_VALUES[8],\n            s: 0.5,\n            r: ENV_VALUES[6],\n        },\n    };\n\n    const scale = edoToRatios(12, 2);\n\n    const context: Context = {\n        rootHz: 220,\n        time: 0,\n        subdivision: 0.5,\n        scale,\n        scaleLabels: edoToLabels(12, scale, 2),\n        octaveSize: 2,\n    };\n\n    const moscItems: MoscItem[] = [];\n    let initialRulerState: InitialRulerState = {\n        plots: [],\n    };\n\n    grammarSequence.items.forEach((item): void => {\n        const { type } = item;\n        if (type === \"Comment\" || type === \"BarLine\" || type === \"Whitespace\") {\n            // do nothing\n            return;\n        }\n\n        if (type === \"SetScale\") {\n            setScale(item as SetScaleType, context);\n            return;\n        }\n\n        if (type === \"SetRoot\") {\n            const { pitch } = item as SetRootType;\n            context.rootHz = pitchToHz(pitch, context);\n            return;\n        }\n\n        if (type === \"Note\") {\n            moscItems.push(...noteToMosc(item as NoteType, context));\n            initialRulerState = rulerStateCaptureRootHz(\n                initialRulerState,\n                context\n            );\n            return;\n        }\n\n        if (type === \"Rest\") {\n            const { time } = context;\n            const rest = item as RestType;\n            context.time += rest.length * context.subdivision;\n            // mutate ast node to add time\n            const arr: [number, number] = [time, context.time];\n            times.push(arr);\n            rest.time = arr;\n            return;\n        }\n\n        if (type === \"Chord\") {\n            moscItems.push(...chordToMosc(item as ChordType, context));\n            return;\n        }\n\n        if (type === \"RatioChord\") {\n            moscItems.push(...chordToMosc(item as RatioChordType, context));\n            initialRulerState = rulerStateCaptureRootHz(\n                initialRulerState,\n                context\n            );\n            return;\n        }\n\n        if (type === \"SetterGroup\") {\n            (item as SetterGroupType).setters.forEach((setter) => {\n                moscItems.push(...setterToMosc(setter, context));\n                initialRulerState = setterToRulerState(\n                    initialRulerState,\n                    setter,\n                    context\n                );\n            });\n            return;\n        }\n\n        throw new Error(`Unknown sequence item \"${type}\"`);\n    });\n\n    initialRulerState = rulerStateCaptureRootHz(initialRulerState, context);\n\n    const sequence = [\n        INITIAL_TEMPO,\n        INITIAL_OSC,\n        INITIAL_ENV,\n        ...moscItems,\n        {\n            type: \"END_TIME\",\n            time: context.time,\n        } as MoscEnd,\n    ];\n\n    // translate times from steps to ms\n    const thisTimeToMs = timeToMs(sequence);\n\n    // omg are we really mutating many time items throughout the AST tree via mutations? golly!\n    times.forEach((time) => {\n        time[0] = thisTimeToMs(time[0]);\n        time[1] = thisTimeToMs(time[1]);\n    });\n\n    const score = {\n        sequence,\n        lengthTime: context.time,\n    };\n\n    return {\n        score,\n        initialRulerState,\n    };\n};\n","import {useState, useCallback, useEffect} from 'react';\n\nexport const hashify = (newHash: string): string => {\n    return encodeURIComponent(newHash)\n        .replace(/_/g, '%_')\n        .replace(/%20/g, '_');\n};\n\nconst reverseString = (str: string): string => {\n    return str\n        .split('')\n        .reverse()\n        .join('');\n};\n\nexport const unhashify = (hash: string): string => {\n    return decodeURIComponent(\n        // browser support for negaitve lookbehinds is patchy\n        // and we want to replace all _ that arent preceded by % with %20\n        // so reverse the string, replace with a negative lookahead (well supported) and reverse again\n        reverseString(\n            reverseString(hash).replace(/_(?!%)/g, reverseString('%20'))\n        ).replace(/%_/g, '_')\n    );\n};\n\ntype UseHashResult = readonly [string, (newHash: string) => void];\n\nexport const useHash = (): UseHashResult => {\n    const [hash, setHash] = useState(() => {\n        let initialHash = unhashify(window.location.hash.substr(1));\n        if(!initialHash && window.localStorage) {\n            initialHash = window.localStorage.getItem('lasttune') ?? '';\n        }\n        return initialHash;\n    });\n\n    const onHashChange = useCallback(() => {\n        setHash(window.location.hash);\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('hashchange', onHashChange);\n        return () => {\n            window.removeEventListener('hashchange', onHashChange);\n        };\n    }, [onHashChange]);\n\n    const _setHash = useCallback((newHash: string) => {\n        const newHashEncoded = hashify(newHash);\n        if (newHashEncoded !== hash) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            window.history.replaceState(undefined, undefined, '#' + newHashEncoded);\n            window.localStorage?.setItem('lasttune', newHash);\n        }\n    }, [hash]);\n\n    return [hash, _setHash] as const;\n};\n","import {useState, useEffect} from 'react';\n\nconst windowLoadPromise = new Promise(resolve => {\n    const handleLoad = () => {\n        window.removeEventListener('load', handleLoad);\n        resolve(null);\n    };\n    window.addEventListener('load', handleLoad);\n});\n\nexport const useWindowLoaded = (): boolean => {\n\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            await windowLoadPromise;\n            await (document as any).fonts.ready;\n            setLoaded(true);\n        })();\n    }, []);\n\n    return loaded;\n};\n","import type {MoscScoreMs, MoscNoteMs, MoscItemMs, MoscParamMs, MoscEndMs} from '@xenpaper/mosc';\nimport {SoundEngine, scoreToMs} from '@xenpaper/mosc';\nimport * as Tone from 'tone';\n\n//\n// utils\n//\n\nfunction flatMap<I,O>(arr: I[], mapper: (item: I) => O[]): O[] {\n    const out: O[] = [];\n    arr.forEach(item => out.push(...mapper(item)));\n    return out;\n}\n\n//\n// consts\n//\n\nconst OSC_VOLUME = -18;\n\nexport const OSC_BASE_TYPES = [\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle'\n];\n\nexport let OSC_PARTIAL_SUFFIXES: string[] = [];\nfor(let i = 1; i < 33; i++) {\n    OSC_PARTIAL_SUFFIXES.push(`${i}`);\n}\n\nexport const OSC_TYPES_EXPANDED = flatMap(OSC_BASE_TYPES, base => [\n    base,\n    `fm${base}`,\n    `am${base}`,\n    `fat${base}`\n]);\n\nexport const OSC_TYPES = flatMap(OSC_TYPES_EXPANDED, type => [\n    type,\n    ...OSC_PARTIAL_SUFFIXES.map(suffix => `${type}${suffix}`)\n]);\n\nexport class SoundEngineTonejs extends SoundEngine {\n\n    _started = false;\n    _endMs = 0;\n    _loopEndMs = 0;\n    _activeNoteEvents = new Set<MoscItemMs>();\n\n    synth = new Tone.PolySynth(Tone.Synth, {\n        oscillator: {\n            type: 'sine',\n            volume: OSC_VOLUME\n        },\n        envelope: {\n            attack: 0.01,\n            sustain: 0.5,\n            decay: 0.25,\n            release: 0.5\n        }\n    }).chain(Tone.Destination);\n\n    playing(): boolean {\n        return Tone.Transport.state === 'started';\n    }\n\n    looping(): boolean {\n        return Tone.Transport.loop;\n    }\n\n    position(): number {\n        return Tone.Transport.seconds * 1000;\n    }\n\n    endPosition(): number {\n        return this._endMs;\n    }\n\n    async start(): Promise<void> {\n        if(!this._started) {\n            await Tone.start();\n            this._started = true;\n\n            const onEnd = () => {\n                this.synth.releaseAll();\n                this._activeNoteEvents.forEach(noteMs => {\n                    this._triggerEvent('note', noteMs, false);\n                });\n                this._activeNoteEvents.clear();\n            };\n\n            Tone.Transport.on('stop', onEnd);\n            Tone.Transport.on('loop', onEnd);\n        }\n    }\n\n    async play(): Promise<void> {\n        await this.start();\n        Tone.Transport.start();\n    }\n\n    async pause(): Promise<void> {\n        await this.start();\n        Tone.Transport.stop();\n    }\n\n    async gotoMs(ms: number): Promise<void> {\n        Tone.Transport.seconds = ms * 0.001;\n    }\n\n    setLoop(loop: boolean, startMs: number = 0, endMs: number = 0): void {\n        this.setLoopActive(loop);\n        this.setLoopStart(startMs);\n        this.setLoopEnd(endMs);\n    }\n\n    setLoopActive(loop: boolean = true): void {\n        Tone.Transport.loop = loop;\n    }\n\n    setLoopStart(ms: number = 0): void {\n        Tone.Transport.loopStart = ms * 0.001;\n    }\n\n    setLoopEnd(ms: number = 0): void {\n        this._loopEndMs = ms;\n        Tone.Transport.loopEnd = (ms === 0 ? this._endMs : ms) * 0.001;\n    }\n\n    async setScore(scoreMs: MoscScoreMs): Promise<void> {\n        this.scoreMs = scoreMs;\n\n        // clear all previous notes from tone transport\n        Tone.Transport.cancel();\n\n        // add all new notes to tone transport\n        this.scoreMs.sequence.forEach((item: MoscItemMs): void => {\n            if(item.type === 'NOTE_MS') {\n                const noteMs = item as MoscNoteMs;\n                Tone.Transport.schedule((time: number) => {\n                    this.synth.triggerAttackRelease(\n                        noteMs.hz,\n                        (noteMs.msEnd * 0.001) - (noteMs.ms * 0.001),\n                        time\n                    );\n                    this._activeNoteEvents.add(noteMs);\n                    this._triggerEvent('note', noteMs, true);\n                }, noteMs.ms * 0.001 + 0.1); // schedule in the future slightly to avoid double note playing at end\n\n                Tone.Transport.schedule((time: number) => {\n                    this._activeNoteEvents.delete(noteMs);\n                    this._triggerEvent('note', noteMs, false);\n                }, noteMs.msEnd * 0.001 + 0.1);\n\n                return;\n            }\n\n            if(item.type === 'PARAM_MS') {\n                const paramMs = item as MoscParamMs;\n                Tone.Transport.schedule(() => {\n                    // this is inaccurate\n                    // as tonejs calls these callbacks several ms ahead of schedule\n                    // and relies on scheduled events to pass the provided time\n                    // to schedule correctly, but param changes cannot accept\n                    // the time argument\n                    if(paramMs.value.type === 'osc' && OSC_TYPES.includes(paramMs.value.osc)) {\n                        this.synth.set({\n                            oscillator: {\n                                type: paramMs.value.osc,\n                                volume: OSC_VOLUME\n                            }\n                        });\n                    }\n                    if(paramMs.value.type === 'env') {\n                        this.synth.set({\n                            envelope: {\n                                attack: paramMs.value.a,\n                                decay: paramMs.value.d,\n                                sustain: paramMs.value.s,\n                                release: paramMs.value.r\n                            }\n                        });\n                    }\n\n                }, paramMs.ms * 0.001);\n\n                return;\n            }\n\n            if(item.type === 'END_MS') {\n                this._endMs = (item as MoscEndMs).ms;\n                if(this._loopEndMs === 0) {\n                    this.setLoopEnd(0);\n                }\n\n                Tone.Transport.schedule(async () => {\n                    if(Tone.Transport.loop) return;\n\n                    Tone.Transport.stop();\n                    this._triggerEvent('end', undefined);\n                }, this._endMs * 0.001);\n\n                return;\n            }\n\n            // @ts-ignore\n            throw new Error(`Unexpected item type ${item.type} encountered`);\n        });\n    }\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { AppWrapper } from \"./AppWrapper\";\nimport { IconToggle } from \"./component/IconToggle\";\nimport { Codearea } from \"./component/Codearea\";\nimport { ErrorMessage } from \"./component/ErrorMessage\";\nimport { LoaderPane } from \"./component/LoaderPane\";\nimport { Char } from \"./component/Char\";\nimport { Box, Flex } from \"./layout/Layout\";\nimport { Sidebar, SidebarInfo, SidebarShare } from \"./Sidebars\";\nimport styled from \"styled-components\";\n\nimport { PitchRuler, useRulerState } from \"./PitchRuler\";\nimport type { RulerState } from \"./PitchRuler\";\n\nimport { XenpaperGrammarParser } from \"./data/grammar\";\nimport type { XenpaperAST, SetterGroupType } from \"./data/grammar\";\n\nimport { grammarToChars } from \"./data/grammar-to-chars\";\nimport { processGrammar } from \"./data/process-grammar\";\nimport type { InitialRulerState } from \"./data/process-grammar\";\nimport type { MoscScore } from \"@xenpaper/mosc\";\nimport type { HighlightColor, CharData } from \"./data/grammar-to-chars\";\n\nimport { useHash, hashify } from \"./hooks/useHash\";\nimport { useWindowLoaded } from \"./hooks/useWindowLoaded\";\n\nimport { useDendriform, useInput } from \"dendriform\";\nimport type { Dendriform } from \"dendriform\";\nimport { setAutoFreeze, enableMapSet } from \"immer\";\nsetAutoFreeze(false); // sadly I am relying on mutations within the xenpaper AST because who cares\nenableMapSet();\n\nimport { scoreToMs } from \"@xenpaper/mosc\";\nimport type { SoundEngine } from \"@xenpaper/mosc\";\nimport { SoundEngineTonejs } from \"@xenpaper/sound-engine-tonejs\";\n\nimport { Helmet } from \"react-helmet\";\n\n//\n// sound engine instance\n//\n\nconst soundEngine: SoundEngine = new SoundEngineTonejs();\n\n//\n// xenpaper ast parsing\n//\n\ntype Parsed = {\n    parsed?: XenpaperAST;\n    chars?: CharData[];\n    score?: MoscScore;\n    initialRulerState?: InitialRulerState;\n    error: string;\n};\n\nconst parse = (unparsed: string): Parsed => {\n    try {\n        const parsed = XenpaperGrammarParser(unparsed);\n        const { score, initialRulerState } = processGrammar(parsed);\n        const chars = grammarToChars(parsed);\n\n        if (score) {\n            const scoreMs = scoreToMs(score);\n            soundEngine.setScore(scoreMs);\n        }\n\n        return {\n            parsed,\n            chars,\n            score,\n            initialRulerState,\n            error: \"\",\n        };\n    } catch (e) {\n        console.log(\"!\", e);\n        const matched = e.message.match(/Unexpected token at (\\d+):(\\d+)/);\n\n        const lineNumber: number = matched ? Number(matched[1]) - 1 : -1;\n        const colNumber: number = matched ? Number(matched[2]) - 1 : -1;\n\n        const chars: CharData[] = [];\n        let lineCount = 0;\n        let colCount = 0;\n        let error;\n        let errorAt;\n\n        for (let i = 0; i < unparsed.length + 40; i++) {\n            if (lineCount === lineNumber && colCount === colNumber) {\n                errorAt = i;\n            }\n            if (unparsed[i] === \"\\n\") {\n                lineCount++;\n                colCount = 0;\n            } else {\n                colCount++;\n            }\n        }\n\n        if (typeof errorAt === \"number\") {\n            error =\n                unparsed[errorAt] !== undefined\n                    ? e.message.replace(\n                          \"Unexpected token \",\n                          `Unexpected token \"${unparsed[errorAt]}\" `\n                      )\n                    : e.message;\n\n            chars[errorAt] = {\n                color: \"error\",\n            };\n        } else {\n            error = e.message;\n        }\n\n        return {\n            parsed: undefined,\n            chars,\n            score: undefined,\n            initialRulerState: undefined,\n            error,\n        };\n    }\n};\n\nconst getMsAtLine = (\n    tune: string,\n    chars: CharData[] | undefined,\n    line: number\n): number => {\n    if (line === 0) {\n        return 0;\n    }\n    let ms = 0;\n    let counted = 0;\n    const tuneSplit = tune.split(\"\");\n    for (let i = 0; i < tuneSplit.length; i++) {\n        const chr = tuneSplit[i];\n        const ch = chars?.[i];\n        const [, end] = ch?.playTime ?? [];\n        if (end !== undefined) {\n            ms = end;\n        }\n        if (chr === \"\\n\") {\n            counted++;\n            if (counted === line) {\n                return ms;\n            }\n        }\n    }\n    return 0;\n};\n\n//\n// icons\n//\n\nconst PLAY_PATHS = {\n    paused: [\"M 0 0 L 12 6 L 0 12 Z\"],\n    playing: [\"M 0 0 L 4 0 L 4 12 L 0 12 Z\", \"M 8 0 L 12 0 L 12 12 L 8 12 Z\"],\n    // stopped: ['M 0 0 L 12 0 L 12 12 L 0 12 Z'],\n};\n\n//\n// application component with loader\n//\n\nexport function Xenpaper(): React.ReactElement {\n    const loaded = useWindowLoaded();\n\n    return (\n        <AppWrapper>\n            <LoaderPane height=\"100vh\" loaded={loaded}>\n                <XenpaperApp loaded={loaded} />\n            </LoaderPane>\n        </AppWrapper>\n    );\n}\n\n//\n// application component\n//\n\nexport type SidebarState = \"info\" | \"share\" | \"ruler\" | \"none\";\n\n// type RealtimeState = {\n//     on: boolean;\n//     activeNotes: number[];\n// };\n\nexport type TuneForm = {\n    tune: string;\n    embed: boolean;\n    hash: string;\n    url: string;\n    urlEmbed: string;\n};\n\ntype Props = {\n    loaded: boolean;\n};\n\nexport function XenpaperApp(props: Props): React.ReactElement {\n    const { loaded } = props;\n\n    //\n    // dendriforms with application state\n    //\n\n    const [hash, setHash] = useHash();\n\n    const tuneForm = useDendriform<TuneForm>(\n        () => {\n            let embed = false;\n            let tune = hash;\n            if (tune.startsWith(\"embed:\")) {\n                embed = true;\n                tune = tune.substr(6);\n            }\n            return {\n                tune,\n                embed,\n                hash: \"\",\n                url: \"\",\n                urlEmbed: \"\",\n            };\n        },\n        { history: 300 }\n    );\n\n    tuneForm.useDerive((newValue) => {\n        let hash = newValue.tune;\n        const hashified = hashify(hash);\n\n        if (newValue.embed) {\n            hash = `embed:${hash}`;\n        }\n\n        const url = `https://dxinteractive.github.io/xenpaper/#${hashified}`;\n        const urlEmbed = `https://dxinteractive.github.io/xenpaper/#embed:${hashified}`;\n\n        tuneForm.branch(\"hash\").set(hash);\n        tuneForm.branch(\"url\").set(url);\n        tuneForm.branch(\"urlEmbed\").set(urlEmbed);\n    });\n\n    tuneForm.branch(\"hash\").useChange((hash) => {\n        setHash(hash);\n    });\n\n    const parsedForm = useDendriform<Parsed>(() => parse(tuneForm.value.tune));\n\n    tuneForm.useDerive((value) => {\n        parsedForm.set(parse(value.tune));\n    });\n\n    //\n    // state syncing between sound engine and react\n    //\n\n    const playing = useDendriform<boolean>(false);\n    const selectedLine = useDendriform<number>(0);\n    selectedLine.useChange((line) => {\n        soundEngine.setLoopStart(\n            getMsAtLine(tuneForm.value.tune, parsedForm.value.chars, line)\n        );\n    });\n\n    useEffect(() => {\n        return soundEngine.onEnd(() => {\n            playing.set(false);\n        });\n    }, []);\n\n    const looping = useDendriform<boolean>(false);\n\n    //\n    // ruler state\n    //\n\n    const rulerState = useRulerState(parsedForm.value.initialRulerState);\n\n    useEffect(() => {\n        return soundEngine.onNote((note, on) => {\n            const id = `${note.ms}-${note.hz}`;\n            rulerState.set((draft) => {\n                if (on) {\n                    draft.notesActive.set(id, note);\n                    draft.notes.set(id, note);\n                } else {\n                    draft.notesActive.delete(id);\n                }\n            });\n        });\n    }, []);\n\n    parsedForm.branch(\"initialRulerState\").useChange((initialRulerState) => {\n        rulerState.set((draft) => {\n            draft.rootHz = initialRulerState?.rootHz;\n            draft.octaveSize = initialRulerState?.octaveSize;\n            draft.plots = initialRulerState?.plots;\n            if (draft.colourMode.startsWith(\"proxplot\")) {\n                const index = Number(draft.colourMode.replace(\"proxplot\", \"\"));\n                if (index >= (draft.plots ?? []).length) {\n                    draft.colourMode = \"gradient\";\n                }\n            }\n        });\n    });\n\n    //\n    // sound engine callbacks\n    //\n\n    const handleSetPlayback = useCallback((play: boolean) => {\n        if (parsedForm.value.error) return;\n\n        soundEngine.gotoMs(\n            getMsAtLine(\n                tuneForm.value.tune,\n                parsedForm.value.chars,\n                selectedLine.value\n            )\n        );\n\n        playing.set(play);\n\n        if (play) {\n            soundEngine.play();\n            rulerState.set((draft) => {\n                draft.notes.clear();\n            });\n        } else {\n            soundEngine.pause();\n        }\n    }, []);\n\n    const handleTogglePlayback = useCallback((state: string) => {\n        handleSetPlayback(state === \"paused\");\n    }, []);\n\n    const handleToggleLoop = useCallback(() => {\n        const newValue = !looping.value;\n        looping.set(newValue);\n        soundEngine.setLoopActive(newValue);\n    }, []);\n\n    //\n    // special key combos\n    //\n\n    useEffect(() => {\n        const callback = (event: KeyboardEvent) => {\n            if ((event.ctrlKey || event.metaKey) && event.keyCode === 13) {\n                handleSetPlayback(playing.value);\n            }\n            if ((event.ctrlKey || event.metaKey) && event.keyCode === 90) {\n                event.preventDefault();\n                if (event.shiftKey) {\n                    tuneForm.redo();\n                } else {\n                    tuneForm.undo();\n                }\n            }\n        };\n\n        document.addEventListener(\"keydown\", callback);\n        return () => document.removeEventListener(\"keydown\", callback);\n    }, []);\n\n    //\n    // sidebar state\n    //\n\n    const [sidebarState, setSidebar] = useState<SidebarState>(() => {\n        return parsedForm.value?.initialRulerState?.lowHz ? \"ruler\" : \"info\";\n    });\n\n    const toggleSidebarInfo = useCallback(() => {\n        setSidebar((s) => (s !== \"info\" ? \"info\" : \"none\"));\n    }, []);\n\n    const toggleSidebarShare = useCallback(() => {\n        setSidebar((s) => (s !== \"share\" ? \"share\" : \"none\"));\n    }, []);\n\n    const toggleSidebarRuler = useCallback(() => {\n        setSidebar((s) => (s !== \"ruler\" ? \"ruler\" : \"none\"));\n    }, []);\n\n    const onSetTune = useCallback(async (tune: string): Promise<void> => {\n        tuneForm.branch(\"tune\").set(tune);\n        await soundEngine.gotoMs(0);\n        handleSetPlayback(true);\n    }, []);\n\n    const codepaneContainerProps = {};\n\n    //\n    // elements\n    //\n\n    const playPause = playing.render(\n        (form) => {\n            return (\n                <IconToggle\n                    state={form.useValue() ? \"playing\" : \"paused\"}\n                    paths={PLAY_PATHS}\n                    onClick={handleTogglePlayback}\n                    loaded={loaded}\n                    hoverBackground\n                    large={!tuneForm.branch(\"embed\").useValue()}\n                />\n            );\n        },\n        [loaded]\n    );\n\n    const undoRedo = tuneForm.render((form) => {\n        const { canUndo, canRedo } = form.useHistory();\n        return (\n            <>\n                <SideButton onClick={form.undo} disabled={!canUndo}>\n                    Undo\n                </SideButton>\n                <SideButton onClick={form.redo} disabled={!canRedo}>\n                    Redo\n                </SideButton>\n            </>\n        );\n    });\n\n    const loop = looping.render((looping) => {\n        return (\n            <SideButton onClick={handleToggleLoop} active={looping.useValue()}>\n                Loop\n            </SideButton>\n        );\n    });\n\n    const sidebarToggles = (\n        <>\n            <SideButton onClick={toggleSidebarInfo}>Info</SideButton>\n            <SideButton onClick={toggleSidebarShare}>Share</SideButton>\n            <SideButton onClick={toggleSidebarRuler}>Ruler</SideButton>\n        </>\n    );\n\n    const sidebar = (\n        <>\n            {sidebarState === \"info\" && (\n                <SidebarInfo onSetTune={onSetTune} setSidebar={setSidebar} />\n            )}\n            {sidebarState === \"share\" &&\n                tuneForm.render((form) => {\n                    const url = form.branch(\"url\").useValue();\n                    const urlEmbed = form.branch(\"urlEmbed\").useValue();\n                    return (\n                        <SidebarShare\n                            setSidebar={setSidebar}\n                            url={url}\n                            urlEmbed={urlEmbed}\n                        />\n                    );\n                })}\n            {sidebarState === \"ruler\" && (\n                <Sidebar\n                    setSidebar={setSidebar}\n                    title=\"Pitch ruler\"\n                    desc=\"Click and drag to pan, use mousewheel to zoom.\"\n                    wide\n                >\n                    <PitchRuler rulerState={rulerState} />\n                </Sidebar>\n            )}\n        </>\n    );\n\n    const code = (\n        <CodePanel\n            tuneForm={tuneForm}\n            parsedForm={parsedForm}\n            selectedLine={selectedLine}\n        />\n    );\n\n    const htmlTitle = <SetHtmlTitle tuneForm={tuneForm} />;\n\n    const openOnXenpaper = tuneForm.render(\"url\", (form) => (\n        <EditOnXenpaperButton href={form.useValue()} target=\"_blank\">\n            Edit on Xenpaper\n        </EditOnXenpaperButton>\n    ));\n\n    const embedLayout = tuneForm.branch(\"embed\").useValue();\n\n    if (embedLayout) {\n        return (\n            <EmbedLayout\n                playPause={playPause}\n                loop={loop}\n                code={code}\n                openOnXenpaper={openOnXenpaper}\n                htmlTitle={htmlTitle}\n                codepaneContainerProps={codepaneContainerProps}\n            />\n        );\n    }\n\n    return (\n        <NormalLayout\n            playPause={playPause}\n            undoRedo={undoRedo}\n            loop={loop}\n            code={code}\n            htmlTitle={htmlTitle}\n            sidebarToggles={sidebarToggles}\n            sidebar={sidebar}\n            codepaneContainerProps={codepaneContainerProps}\n        />\n    );\n}\n\n//\n// layouts\n//\n\ntype NormalLayoutProps = {\n    playPause: React.ReactNode;\n    undoRedo: React.ReactNode;\n    loop: React.ReactNode;\n    code: React.ReactNode;\n    htmlTitle: React.ReactNode;\n    sidebarToggles: React.ReactNode;\n    sidebar: React.ReactNode;\n    codepaneContainerProps: { [prop: string]: unknown };\n};\n\nfunction NormalLayout(props: NormalLayoutProps): React.ReactElement {\n    const {\n        playPause,\n        undoRedo,\n        loop,\n        code,\n        htmlTitle,\n        sidebarToggles,\n        sidebar,\n        codepaneContainerProps,\n    } = props;\n\n    return (\n        <Flex height=\"100vh\" flexDirection=\"column\">\n            <Flex\n                display={[\"block\", \"flex\"]}\n                flexGrow=\"1\"\n                flexShrink=\"1\"\n                minHeight=\"0\"\n                position=\"relative\"\n            >\n                {/* toolbar on mobile */}\n                <Toolbar\n                    display={[\"flex\", \"none\"]}\n                    position=\"fixed\"\n                    top={0}\n                    width=\"100%\"\n                >\n                    {playPause}\n                    {undoRedo}\n                    {loop}\n                </Toolbar>\n                {/* toolbar on desktop */}\n                <Toolbar display={[\"none\", \"block\"]} mt={4} px={2} pt=\"12px\">\n                    <Box mb={3}>{playPause}</Box>\n                    {undoRedo}\n                    {loop}\n                    <Hr my={2} />\n                    {sidebarToggles}\n                </Toolbar>\n                {/* codepane */}\n                <Box\n                    flexGrow=\"1\"\n                    flexShrink=\"1\"\n                    pl={[0, 3]}\n                    overflow=\"auto\"\n                    mt={3}\n                    pt={[\"24px\", 3]}\n                    {...codepaneContainerProps}\n                >\n                    {code}\n                </Box>\n                {/* horizontal rule on mobile */}\n                <Hr display={[\"block\", \"none\"]} mt={4} />\n                {/* more tool buttons on mobile */}\n                <Box display={[\"flex\", \"none\"]}>{sidebarToggles}</Box>\n                {/* sidebars */}\n                {sidebar}\n            </Flex>\n            {htmlTitle}\n        </Flex>\n    );\n}\n\ntype EmbedLayoutProps = {\n    playPause: React.ReactNode;\n    loop: React.ReactNode;\n    code: React.ReactNode;\n    openOnXenpaper: React.ReactNode;\n    htmlTitle: React.ReactNode;\n    codepaneContainerProps: { [prop: string]: unknown };\n};\n\nfunction EmbedLayout(props: EmbedLayoutProps): React.ReactElement {\n    const {\n        playPause,\n        loop,\n        code,\n        htmlTitle,\n        openOnXenpaper,\n        codepaneContainerProps,\n    } = props;\n\n    return (\n        <Flex height=\"100vh\" flexDirection=\"column\">\n            <Flex flexGrow=\"1\" flexShrink=\"1\" minHeight=\"0\" position=\"relative\">\n                <Toolbar display=\"flex\" position=\"fixed\" top={0} width=\"100%\">\n                    {playPause}\n                    {loop}\n                    {openOnXenpaper}\n                </Toolbar>\n                <Box\n                    flexGrow=\"1\"\n                    flexShrink=\"1\"\n                    overflow=\"auto\"\n                    mt={3}\n                    pt=\"24px\"\n                    {...codepaneContainerProps}\n                >\n                    {code}\n                </Box>\n            </Flex>\n            {htmlTitle}\n        </Flex>\n    );\n}\n\n//\n// codepanel\n//\n\ntype CodePanelProps = {\n    tuneForm: Dendriform<TuneForm>;\n    parsedForm: Dendriform<Parsed>;\n    selectedLine: Dendriform<number>;\n};\n\nfunction CodePanel(props: CodePanelProps): React.ReactElement {\n    return props.tuneForm.render((form) => {\n        const embed = form.branch(\"embed\").useValue();\n\n        // get dendriform state values\n        const { chars, error } = props.parsedForm.useValue();\n\n        // use value with a 200ms debounce for perf reasons\n        // this debounce does cause the code value to progress forward\n        // without the calculated syntax highlighting\n        // so colours will be momentarily skew-whiff\n        // but thats better than parsing the xenpaper AST at every keystroke\n        const inputProps = useInput(form.branch(\"tune\"), 200);\n        const tuneChars: string[] = inputProps.value.split(\"\");\n        const charDataArray: (CharData | undefined)[] = tuneChars.map(\n            (chr, index) => chars?.[index]\n        );\n\n        const hasPlayStartButtons = tuneChars.some((ch) => ch === \"\\n\");\n        let playStartLine = 0;\n\n        const charElements: React.ReactNode[] = [];\n\n        const createPlayStart = () => {\n            charElements.push(\n                <PlayStart\n                    key={`playstart${playStartLine}`}\n                    line={playStartLine++}\n                    selectedLine={props.selectedLine}\n                />\n            );\n        };\n\n        if (hasPlayStartButtons) {\n            createPlayStart();\n        }\n        charDataArray.forEach((charData, index) => {\n            const ch = tuneChars[index];\n\n            charElements.push(\n                <Char\n                    key={index}\n                    ch={ch}\n                    charData={charData}\n                    soundEngine={soundEngine}\n                />\n            );\n\n            if (ch === \"\\n\") {\n                createPlayStart();\n            }\n        });\n\n        // stop event propagation here so we can detect clicks outside of this element in isolation\n        const stopPropagation = (e: Event) => e.stopPropagation();\n\n        return (\n            <Box onClick={stopPropagation}>\n                <Codearea\n                    {...inputProps}\n                    charElements={charElements}\n                    freeze={embed}\n                />\n                {error && (\n                    <Box>\n                        <ErrorMessage>Error: {error}</ErrorMessage>\n                    </Box>\n                )}\n            </Box>\n        );\n    });\n}\n\n//\n// html title\n//\n\ntype SetHtmlTitleProps = {\n    tuneForm: Dendriform<TuneForm>;\n};\n\nfunction SetHtmlTitle(props: SetHtmlTitleProps): React.ReactElement {\n    return props.tuneForm.render(\"tune\", (form) => {\n        const tune = form.useValue();\n        // set title based on code in text area\n        const titleLimit = 20;\n        const title =\n            tune.length === 0\n                ? \"Xenpaper\"\n                : tune.length > titleLimit\n                ? `Xenpaper: ${tune.slice(0, titleLimit)}...`\n                : `Xenpaper: ${tune}`;\n\n        return (\n            <Helmet>\n                <title>{title}</title>\n                <meta property=\"og:title\" content={title} />\n            </Helmet>\n        );\n    });\n}\n\n//\n//\n// styled components\n//\n\nconst Toolbar = styled(Box)`\n    background-color: ${(props) => props.theme.colors.background.normal};\n    z-index: 4;\n`;\n\nconst Hr = styled(Box)`\n    border-top: 1px ${(props) => props.theme.colors.background.light} solid;\n`;\n\ntype SideButtonProps = {\n    active?: boolean;\n    multiline?: boolean;\n};\n\nconst SideButton = styled.button<SideButtonProps>`\n    border: none;\n    display: block;\n    padding: ${(props) => (props.multiline ? \".5rem\" : \"1rem .5rem\")};\n    cursor: ${(props) => (props.disabled ? \"default\" : \"pointer\")};\n    background-color: ${(props) =>\n        props.active\n            ? props.theme.colors.text.placeholder\n            : props.theme.colors.background.normal};\n    color: ${(props) =>\n        props.disabled\n            ? props.theme.colors.highlights.unknown\n            : props.active\n            ? props.theme.colors.background.normal\n            : props.theme.colors.highlights.comment};\n    position: relative;\n    outline: none;\n    font-family: ${(props) => props.theme.fonts.mono};\n    font-size: ${(props) => (props.multiline ? \"0.8rem\" : \"0.9rem\")};\n    text-align: center;\n    width: auto;\n    text-transform: uppercase;\n    border-left: 3px solid transparent;\n    ${(props) => props.multiline && `line-height: 1em;`}\n\n    ${(props) =>\n        !props.active\n            ? `&:hover, &:focus, &:active {\n        background-color: ${props.theme.colors.background.light};\n    }`\n            : ``}\n\n    @media all and (min-width: ${(props) => props.theme.widths.sm}) {\n        padding: 0.5rem;\n        font-size: ${(props) => (props.multiline ? \"0.9rem\" : \"1.1rem\")};\n        width: 5rem;\n    }\n`;\n\ntype EditOnXenpaperButtonProps = {\n    multiline?: boolean;\n};\n\nconst EditOnXenpaperButton = styled.a<EditOnXenpaperButtonProps>`\n    border: none;\n    height: 3rem;\n    line-height: 1rem;\n    display: block;\n    padding: ${(props) => (props.multiline ? \".5rem\" : \"1rem .5rem\")};\n    cursor: pointer;\n    background-color: ${(props) => props.theme.colors.background.normal};\n    color: ${(props) => props.theme.colors.highlights.comment};\n    position: relative;\n    outline: none;\n    font-family: ${(props) => props.theme.fonts.mono};\n    font-size: ${(props) => (props.multiline ? \"0.8rem\" : \"0.9rem\")};\n    text-align: center;\n    width: auto;\n    text-transform: uppercase;\n    border-left: 3px solid transparent;\n    ${(props) => props.multiline && `line-height: 1em;`}\n    text-decoration: none;\n\n    &:hover,\n    &:focus,\n    &:active {\n        background-color: ${(props) => props.theme.colors.background.light};\n        text-decoration: none;\n    }\n\n    margin-left: auto;\n\n    @media all and (min-width: ${(props) => props.theme.widths.sm}) {\n        font-size: ${(props) => (props.multiline ? \"0.9rem\" : \"1.1rem\")};\n    }\n`;\n\ntype PlayStartProps = {\n    line: number;\n    selectedLine: Dendriform<number>;\n};\n\nconst PlayStart = styled(({ line, selectedLine, ...props }: PlayStartProps) => {\n    const onClick = () => selectedLine.set(line);\n    return (\n        <span {...props} onClick={onClick}>\n            {\">\"}\n        </span>\n    );\n})`\n    position: absolute;\n    left: 0.8rem;\n    border: none;\n    display: block;\n    cursor: pointer;\n    color: ${(props) => props.theme.colors.text.placeholder};\n    outline: none;\n    opacity: ${(props) =>\n        props.selectedLine.useValue() === props.line ? \"1\" : \".2\"};\n    pointer-events: auto;\n\n    transition: opacity 0.2s ease-out;\n\n    &:hover,\n    &:focus,\n    &:active {\n        opacity: 1;\n    }\n`;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Xenpaper} from '@xenpaper/xenpaper-ui';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Xenpaper />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}